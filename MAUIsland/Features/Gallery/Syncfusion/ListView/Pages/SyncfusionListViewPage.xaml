<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.SyncfusionListViewPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:syncfusion="clr-namespace:Syncfusion.Maui.ListView;assembly=Syncfusion.Maui.ListView"
    Title="SyncfusionListViewPage"
    Padding="10"
    x:DataType="app:SyncfusionListViewPageViewModel"
    SizeChanged="BasePage_SizeChanged">
    <app:BasePage.Resources>
        <DataTemplate x:Key="HorizontalWrapLayoutItemTemplate" x:DataType="app:ControlInfo">
            <app:ControlCardContentView ComponentData="{x:Binding}" />
        </DataTemplate>

        <syncfusion:GridLayout x:Key="MAUIAllControlsLayout" SpanCount="{x:Binding Span}" />

        <x:String x:Key="ControlInfo">
            The Syncfusion .NET MAUI ListView renders set of data items using Maui views or custom templates. Data can easily be grouped, sorted, and filtered.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Key features
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>


        <x:String x:Key="ImageButtonControlInfo">
            The Button class defines an ImageSource property that allows you to display a small bitmap image on the Button, either alone or in combination with text. You can also specify how the text and image are arranged. The ImageSource property is of type ImageSource, which means that the bitmaps can be loaded from a file, embedded resource, URI, or stream.
        </x:String>


        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">BorderColor</strong>, of type <strong style="color:blue">Color</strong>, describes the border color of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">BorderWidth</strong>, of type <strong style="color:blue">double</strong>, defines the width of the button's border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, defines the spacing between characters of the button's text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Command</strong>, of type <strong style="color:blue">ICommand</strong>, defines the command that's executed when the button is tapped.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CommandParameter</strong>, of type <strong style="color:blue">object</strong>, is the parameter that's passed to Command.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ContentLayout</strong>, of type <strong style="color:blue">ButtonContentLayout</strong>, defines the object that controls the position of the button image and the spacing between the button's image and text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CornerRadius</strong>, of type <strong style="color:blue">int</strong>, describes the corner radius of the button's border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the button text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ImageSource</strong>, of type <strong style="color:blue">ImageSource</strong>, specifies a bitmap image to display as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">LineBreakMode</strong>, of type <strong style="color:blue">LineBreakMode</strong>, determines how text should be handled when it can't fit on one line.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Padding</strong>, of type <strong style="color:blue">Thickness</strong>, determines the button's padding.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text displayed as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, describes the color of the button's text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextTransform</strong>, of type <strong style="color:blue">TextTransform</strong>, defines the casing of the button's text.
                            ]]>
            </x:String>
        </x:Array>

    </app:BasePage.Resources>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <syncfusion:SfListView ItemTemplate="{x:StaticResource BulletListItemTemplate}" ItemsSource="{x:StaticResource PropertyItemsSource}" />
            </Frame>

            <syncfusion:SfListView
                x:Name="MAUIAllControlSfList"
                ItemSize="180"
                ItemSpacing="10"
                ItemTemplate="{x:StaticResource HorizontalWrapLayoutItemTemplate}"
                ItemsSource="{x:Binding MauiAllControlsItems}">
                <syncfusion:SfListView.ItemsLayout>
                    <syncfusion:GridLayout x:Name="gridLayout" />
                </syncfusion:SfListView.ItemsLayout>
            </syncfusion:SfListView>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>