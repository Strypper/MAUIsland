<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.SearchBarPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Search Bar"
    Padding="20"
    x:DataType="core:SearchBarPageViewModel"
    BackgroundColor="Transparent"
    Loaded="BasePage_Loaded">

    <core:BasePage.Resources>
        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) SearchBar is a user input control used to initiating a search. The SearchBar control supports placeholder text, query input, search execution, and cancellation. The following iOS screenshot shows a SearchBar query with results displayed in a ListView:
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="PropertiesSearchEventHandlerHeader">
            A search can be executed using the SearchBar control by attaching an event handler to one of the following events:
        </x:String>

        <x:String x:Key="PropertiesSearchViewModelHeader">
            A search can be executed without event handlers by binding the SearchCommand property to an ICommand implementation:
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            SearchBar defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesSearchEventHandlerFooter">
            The following example shows an event handler attached to the TextChanged event and uses a ListView to display search results:
        </x:String>

        <x:String x:Key="PropertiesSearchViewModelFooter">
            The following example shows an command binding to the search command and uses a ListView to display search results:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CancelButtonColor</strong> is a <strong style="color:blue">Color</strong> that defines the color of the cancel button.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong> is a <strong style="color:blue">Color</strong> that's the spacing between characters of the SearchBar text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">CursorPosition</strong> is a <strong style="color:blue">int</strong> that determines the position at which the next character will be inserted into the string stored in the <strong style="color:blue">Text</strong> property.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong> is a <strong style="color:blue">FontAttributes</strong> enum value that determines whether the SearchBar font is bold, italic, or neither.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong> is a <strong style="color:blue">bool</strong> which defines whether an app's UI reflects text scaling preferences set in the operating system.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong> is a <strong style="color:blue">string</strong> that determines the font family used by the SearchBar.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong> is a <strong style="color:blue">double</strong> value that represents specific font sizes across platforms.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">HorizontalTextAlignment</strong> is a <strong style="color:blue">TextAlignment</strong> enum value that defines the horizontal alignment of the query text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsTextPredictionEnabled</strong> is a <strong style="color:blue">bool</strong> that determines whether text prediction and automatic text correction is enabled.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Placeholder</strong> is a <strong style="color:blue">string</strong> that defines the placeholder text, such as "Search...".
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">PlaceholderColor</strong> is a <strong style="color:blue">Color</strong> that defines the color of the placeholder text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">SearchCommand</strong> is an <strong style="color:blue">ICommand</strong> that allows binding user actions, such as finger taps or clicks, to commands defined on a viewmodel.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">SearchCommandParameter</strong> is an <strong style="color:blue">object</strong> that specifies the parameter that should be passed to the <strong style="color:blue">SearchCommand</strong>.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">SelectionLength</strong> is an <strong style="color:blue">int</strong> that can be used to return or set the length of text selection within the SearchBar.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong> is a <strong style="color:blue">string</strong> containing the query text in the SearchBar.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong> is a <strong style="color:blue">Color</strong> that defines the query text color.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">VerticalTextAlignment</strong> is a <strong style="color:blue">TextAlignment</strong> enum value that defines the vertical alignment of the query text.
                            ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="PropertyEventHandlersItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">SearchButtonPressed</strong>, which is called when the user either clicks the search button or presses the enter key.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextChanged</strong>, which is called anytime the text in the query box is changed. This event is inherited from the <strong style="color:blue">InputView</strong> class.
                            ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="PropertyViewModelItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                The following example shows a viewmodel class that contains an <strong style="color:blue">ICommand</strong> property named <strong style="color:blue">SearchCommand</strong>.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                In this case the <strong style="color:blue">RelayCommand</strong> attribute help to generate the <strong style="color:blue">ICommand</strong> property named <strong style="color:blue">SearchCommand</strong> from <strong style="color:blue">SearchAsync</strong> method.
                            ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />
    </core:BasePage.Resources>
    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <SwipeView>
        <SwipeView.LeftItems>
            <SwipeItems Mode="Execute">
                <SwipeItem
                    BackgroundColor="DarkGray"
                    Command="{x:Binding BackCommand}"
                    IconImageSource="{x:StaticResource FluentArrowCircleLeft48Regular}"
                    Text="Go back" />
            </SwipeItems>
        </SwipeView.LeftItems>
        <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
            <ScrollView>
                <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                    <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                        <Border
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <Grid>
                                <HorizontalStackLayout Spacing="10">
                                    <Image
                                        HeightRequest="25"
                                        Source="githublogo.png"
                                        VerticalOptions="Center"
                                        WidthRequest="25" />

                                    <Label
                                        HorizontalOptions="Start"
                                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                                        Text="Issues"
                                        VerticalOptions="Center" />
                                </HorizontalStackLayout>
                                <Border
                                    BackgroundColor="OrangeRed"
                                    HeightRequest="40"
                                    HorizontalOptions="End"
                                    StrokeShape="RoundRectangle 20"
                                    VerticalOptions="Center"
                                    WidthRequest="40">
                                    <Label
                                        FontAttributes="Bold"
                                        HorizontalOptions="Center"
                                        Text="{x:Binding ControlIssues.Count,
                                                         Mode=OneWay}"
                                        VerticalOptions="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <CollectionView
                            Grid.Row="1"
                            Margin="0,0,0,0"
                            EmptyView="{x:Binding EmptyViewText,
                                                  Mode=OneWay}"
                            ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                            ItemsLayout="{x:StaticResource ControlIssueLayout}"
                            ItemsSource="{x:Binding ControlIssues,
                                                    Mode=OneWay}"
                            SelectedItem="{x:Binding SelectedControlIssue,
                                                     Mode=TwoWay}"
                            SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                            SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                         Mode=OneWay}"
                            SelectionMode="Single"
                            VerticalOptions="Start" />
                        <Border
                            Grid.Row="2"
                            Margin="0,0,0,10"
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="5">
                                <Label
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="Found a new bug?"
                                    TextColor="White"
                                    TextDecorations="Underline" />
                                <Button
                                    Command="{x:Binding OpenUrlCommand}"
                                    CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                    Text="Report to the MAUI team" />
                            </VerticalStackLayout>
                        </Border>
                    </Grid>
                    <VerticalStackLayout Grid.Column="1" Spacing="20">
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <CollectionView
                                Footer="{x:StaticResource PropertiesListFooter}"
                                Header="{x:StaticResource PropertiesListHeader}"
                                ItemsSource="{x:StaticResource PropertyItemsSource}"
                                Style="{x:StaticResource PropertiesListStyle}" />
                        </Border>

                        <!--  Create a SearchBar  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="20">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Create a SearchBar" />
                                <Label Text="The following XAML example shows how to create a SearchBar:" />
                                <SearchBar Placeholder="Search items..." />
                                <core:SourceCodeExpander Code="{x:Binding StandardSearchBarXamlCode}" />
                            </VerticalStackLayout>
                        </Border>

                        <!--  Perform a search with event handlers  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <ScrollView>
                                <VerticalStackLayout Spacing="20">
                                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Perform a search with Event Handlers using TextChanged in SearchBar" />
                                    <CollectionView
                                        Footer="{x:StaticResource PropertiesSearchEventHandlerFooter}"
                                        Header="{x:StaticResource PropertiesSearchEventHandlerHeader}"
                                        ItemsSource="{x:StaticResource PropertyEventHandlersItemsSource}"
                                        Style="{x:StaticResource PropertiesListStyle}" />
                                    <SearchBar
                                        x:Name="EventHandlerSearchBar"
                                        Placeholder="Search items..."
                                        TextChanged="OnSearchAsync" />
                                    <core:ControlInfoListView ItemsSource="{x:Binding ControlGroupListForEventCall}" />
                                    <core:SourceCodeExpander Code="{x:Binding PerformASearchWithEventHandlersXamlCode}" CodeType="Xaml" />
                                    <core:SourceCodeExpander Code="{x:Binding PerformASearchWithEventHandlersCSCode}" CodeType="CSharp" />
                                </VerticalStackLayout>
                            </ScrollView>
                        </Border>

                        <!--  Perform a search using a viewmodel  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <ScrollView>
                                <VerticalStackLayout Spacing="20">
                                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Perform a search with ViewModel using SearchCommand in SearchBar" />
                                    <CollectionView
                                        Footer="{x:StaticResource PropertiesSearchViewModelFooter}"
                                        Header="{x:StaticResource PropertiesSearchViewModelHeader}"
                                        ItemsSource="{x:StaticResource PropertyViewModelItemsSource}"
                                        Style="{x:StaticResource PropertiesListStyle}" />
                                    <SearchBar
                                        x:Name="ViewModelSearchBar"
                                        Placeholder="Search items..."
                                        Text="{x:Binding SearchText}" />
                                    <core:ControlInfoListView ItemsSource="{x:Binding ControlGroupListForCommandCall}" />
                                    <core:SourceCodeExpander Code="{x:Binding PerformASearchWithViewModelXamlCode}" CodeType="Xaml" />
                                    <core:SourceCodeExpander Code="{x:Binding PerformASearchWithViewModelCSCode}" CodeType="CSharp" />
                                </VerticalStackLayout>
                            </ScrollView>
                        </Border>
                    </VerticalStackLayout>
                </Grid>
            </ScrollView>
        </RefreshView>
    </SwipeView>
</core:BasePage>