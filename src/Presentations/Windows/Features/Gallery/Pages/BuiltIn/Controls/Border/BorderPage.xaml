<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.BorderPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Title="Border"
    Padding="10"
    x:DataType="core:BorderPageViewModel"
    BackgroundColor="Transparent"
    Loaded="BasePage_Loaded">

    <core:BasePage.Resources>
        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Button displays text and responds to a tap or click that directs the app to carry out a task. A Button usually displays a short text string indicating a command, but it can also display a bitmap image, or a combination of text and an image. When the Button is pressed with a finger or clicked with a mouse it initiates that command.
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="CreateBorder1">
            Alternatively, the StrokeShape property value can be specified using property tag syntax:
        </x:String>

        <x:String x:Key="CreateBorder2">
            To draw a border, create a Border object and set its properties to define its appearance. Then, set its child to the control to which the border should be added. The following XAML example shows how to draw a border around a Label:
        </x:String>

        <x:String x:Key="CreateBorder3">
            The equivalent C# code is:
        </x:String>

        <x:String x:Key="CreateBorder4">
            In this example, a border with rounded top-left and bottom-right corners is drawn around a Label. The border shape is defined as a RoundRectangle object, whose CornerRadius property is set to a Thickness value that enables independent control of each corner of the rectangle:
        </x:String>

        <x:String x:Key="CreateBorder5">
            Because the Stroke property is of type Brush, borders can also be drawn using gradients:
        </x:String>

        <x:String x:Key="CreateBorder6">
            In this example, a border that uses a linear gradient is drawn around a Label:
        </x:String>

        <x:String x:Key="DefineBorderShapeTitle">
            Define the border shape with a string
        </x:String>

        <x:String x:Key="DefineBorderShapeDescription">
            In XAML, the value of the StrokeShape property can be defined using property-tag syntax, or as a string. Valid string values for the StrokeShape property are:
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Border defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:String x:Key="ImageButtonControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Border is a container control that draws a border, background, or both, around another control. A Border can only contain one child object. If you want to put a border around multiple objects, wrap them in a container object such as a layout.
        </x:String>

        <x:String x:Key="Important1">
            When creating a border using a shape, such as a Rectangle or Polygon, only closed shapes should be used. Therefore, open shapes such as Line are unsupported.
        </x:String>

        <x:String x:Key="Important2">
            While Line is a valid string value for the StrokeShape property, its use is not supported.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Content</strong>, of type <strong style="color:blue">IView</strong>, represents the content to display in the border. This property is the ContentProperty of the Border class, and therefore does not need to be explicitly set from XAML.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Padding</strong>, of type <strong style="color:blue">Thickness</strong>, represents the distance between the border and its child element.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeShape</strong>, of type <strong style="color:blue">IShape</strong>, describes the shape of the border. This property has a type converter applied to it that can convert a string to its equivalent IShape. It's default value is Rectangle. Therefore, a Border will be rectangular by default.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Stroke</strong>, of type <strong style="color:blue">Brush</strong>, indicates the brush used to paint the border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeThickness</strong>, of type <strong style="color:blue">double</strong>, indicates the width of the border. The default value of this property is 1.0.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeDashArray</strong>, of type <strong style="color:blue">DoubleCollection</strong>, which represents a collection of double values that indicate the pattern of dashes and gaps that make up the border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeDashOffset</strong>, of type <strong style="color:blue">double</strong>, specifies the distance within the dash pattern where a dash begins. The default value of this property is 0.0.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeLineCap</strong>, of type <strong style="color:blue">PenLineCap</strong>, describes the shape at the start and end of its line. The default value of this property is PenLineCap.Flat.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeLineJoin</strong>, of type <strong style="color:blue">PenLineJoin</strong>, specifies the type of join that is used at the vertices of the stroke shape. The default value of this property is PenLineJoin.Miter.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">StrokeMiterLimit</strong>, of type <strong style="color:blue">double</strong>, specifies the limit on the ratio of the miter length to half the stroke thickness. The default value of this property is 10.0.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ImageSource</strong>, of type <strong style="color:blue">ImageSource</strong>, specifies a bitmap image to display as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">LineBreakMode</strong>, of type <strong style="color:blue">LineBreakMode</strong>, determines how text should be handled when it can't fit on one line.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Padding</strong>, of type <strong style="color:blue">Thickness</strong>, determines the button's padding.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text displayed as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, describes the color of the button's text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextTransform</strong>, of type <strong style="color:blue">TextTransform</strong>, defines the casing of the button's text.
                            ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="BorderShapePropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Ellipse</strong>
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Rectangle</strong>
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Line</strong>, followed by one or two x- and y-coordinate pairs. For example, Line 10 20 draws a line from (10,20) to (0,0), and Line 10 20, 100 120 draws a line from (10,20) to (100,120).
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Path</strong>, followed by path markup syntax data. For example, Path M 10,100 L 100,100 100,50Z will draw a triangular border. For more information about path markup syntax, see Path markup syntax.
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Polygon</strong>, followed by a collection of x- and y-coordinate pairs. For example, Polygon 40 10, 70 80, 10 50.
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">Polyline</strong>, followed by a collection x- and y-coordinate pairs. For example, Polyline 0,0 10,30 15,0 18,60 23,30 35,30 40,0 43,60 48,30 100,30.
                    ]]>
            </x:String>
            <x:String>
                <![CDATA[
                        <strong style="color:blue">RoundRectangle</strong>, optionally followed by a corner radius. For example, RoundRectangle 40 or RoundRectangle 40,0,0,40.
                    ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />
    </core:BasePage.Resources>

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>


    <SwipeView>
        <SwipeView.LeftItems>
            <SwipeItems Mode="Execute">
                <SwipeItem
                    BackgroundColor="DarkGray"
                    Command="{x:Binding BackCommand}"
                    IconImageSource="{x:StaticResource FluentArrowCircleLeft48Regular}"
                    Text="Go back" />
            </SwipeItems>
        </SwipeView.LeftItems>
        <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
            <ScrollView>
                <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                    <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                        <Border
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <Grid>
                                <HorizontalStackLayout Spacing="10">
                                    <Image
                                        HeightRequest="25"
                                        Source="githublogo.png"
                                        VerticalOptions="Center"
                                        WidthRequest="25" />

                                    <Label
                                        HorizontalOptions="Start"
                                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                                        Text="Issues"
                                        VerticalOptions="Center" />
                                </HorizontalStackLayout>
                                <Border
                                    BackgroundColor="OrangeRed"
                                    HeightRequest="40"
                                    HorizontalOptions="End"
                                    StrokeShape="RoundRectangle 20"
                                    VerticalOptions="Center"
                                    WidthRequest="40">
                                    <Label
                                        FontAttributes="Bold"
                                        HorizontalOptions="Center"
                                        Text="{x:Binding ControlIssues.Count,
                                                         Mode=OneWay}"
                                        VerticalOptions="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <CollectionView
                            Grid.Row="1"
                            Margin="0,0,0,0"
                            ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                            ItemsLayout="{x:StaticResource ControlIssueLayout}"
                            ItemsSource="{x:Binding ControlIssues,
                                                    Mode=OneWay}"
                            SelectedItem="{x:Binding SelectedControlIssue,
                                                     Mode=TwoWay}"
                            SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                            SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                         Mode=OneWay}"
                            SelectionMode="Single"
                            VerticalOptions="Start" />
                        <Border
                            Grid.Row="2"
                            Margin="0,0,0,10"
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="5">
                                <Label
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="Found a new bug?"
                                    TextColor="White"
                                    TextDecorations="Underline" />
                                <Button
                                    Command="{x:Binding OpenUrlCommand}"
                                    CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                    Text="Report to the MAUI team" />
                            </VerticalStackLayout>
                        </Border>
                    </Grid>
                    <VerticalStackLayout Grid.Column="1" Spacing="20">
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Looking for the rounded syntax again 🤣🤣?" />
                                <Label Text="Here you go" />
                                <Label
                                    Padding="5"
                                    BackgroundColor="Yellow"
                                    HorizontalOptions="Start"
                                    Text="{x:Binding RoundedRectangleXamlCode}"
                                    TextColor="Black">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{x:Binding CopyToClipboardCommand}" CommandParameter="{x:Binding RoundedRectangleXamlCode}" />
                                    </Label.GestureRecognizers>
                                    <Label.Behaviors>
                                        <toolkit:AnimationBehavior>
                                            <toolkit:AnimationBehavior.AnimationType>
                                                <toolkit:FadeAnimation Opacity="0.2" />
                                            </toolkit:AnimationBehavior.AnimationType>
                                        </toolkit:AnimationBehavior>
                                    </Label.Behaviors>
                                </Label>
                                <core:SourceCodeExpander Code="{x:Binding RoundedRectangle2XamlCode}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="Subtitle"
                                    Text="{x:StaticResource PropertiesListHeader}"
                                    TextDecorations="Underline" />
                                <CollectionView
                                    Footer="{x:StaticResource PropertiesListFooter}"
                                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                            </VerticalStackLayout>
                        </Border>
                        <Border
                            Padding="10"
                            BackgroundColor="#004173"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout>
                                <Label
                                    Style="{x:StaticResource DocumentSectionTitleStyle}"
                                    Text="Important"
                                    TextColor="White" />
                                <Label Text="{x:StaticResource Important1}" TextColor="White" />
                            </VerticalStackLayout>
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Create a Border" />
                                <Label Text="{x:StaticResource CreateBorder1}" />
                                <Border
                                    Padding="16,8"
                                    Background="#2B0B98"
                                    HorizontalOptions="Center"
                                    Stroke="#C49B33"
                                    StrokeShape="RoundRectangle 40,0,0,40"
                                    StrokeThickness="4">
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="18"
                                        Text=".NET MAUI"
                                        TextColor="White" />
                                </Border>
                                <core:SourceCodeExpander Code="{x:Binding CreateBorderXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:StaticResource CreateBorder1}" />
                                <Border
                                    Padding="16,8"
                                    Background="#2B0B98"
                                    HorizontalOptions="Center"
                                    Stroke="#C49B33"
                                    StrokeShape="RoundRectangle 40,0,0,40"
                                    StrokeThickness="4">
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="18"
                                        Text=".NET MAUI"
                                        TextColor="White" />
                                </Border>
                                <core:SourceCodeExpander Code="{x:Binding CreateBorder2XamlCode}" CodeType="Xaml" />
                                <Label Text="{x:StaticResource CreateBorder2}" />
                                <Label Text="{x:StaticResource CreateBorder3}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateBorder3CSharpCode}" CodeType="CSharp" />
                                <Label Text="{x:StaticResource CreateBorder4}" />
                                <Grid x:Name="CreateBorderExampleGrid" />
                                <Label Text="{x:StaticResource CreateBorder5}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateBorder4XamlCode}" CodeType="Xaml" />
                                <Label Text="{x:StaticResource CreateBorder3}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateBorder4CSharpCode}" CodeType="CSharp" />
                                <Label Text="{x:StaticResource CreateBorder6}" />
                                <Border
                                    Padding="16,8"
                                    Background="#2B0B98"
                                    HorizontalOptions="Center"
                                    StrokeShape="RoundRectangle 40,0,0,40"
                                    StrokeThickness="4">
                                    <Border.Stroke>
                                        <LinearGradientBrush EndPoint="0,1">
                                            <GradientStop Offset="0.1" Color="Orange" />
                                            <GradientStop Offset="1.0" Color="Brown" />
                                        </LinearGradientBrush>
                                    </Border.Stroke>
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="18"
                                        Text=".NET MAUI"
                                        TextColor="White" />
                                </Border>
                            </VerticalStackLayout>
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:StaticResource DefineBorderShapeTitle}" />
                                <Label Text="{x:StaticResource DefineBorderShapeDescription}" />
                                <CollectionView ItemsSource="{x:StaticResource BorderShapePropertyItemsSource}" Style="{x:StaticResource PropertiesListStyle}" />
                            </VerticalStackLayout>
                        </Border>
                        <Border
                            Padding="10"
                            BackgroundColor="#004173"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout>
                                <Label
                                    Style="{x:StaticResource DocumentSectionTitleStyle}"
                                    Text="Important"
                                    TextColor="White" />
                                <Label Text="{x:StaticResource Important2}" TextColor="White" />
                            </VerticalStackLayout>
                        </Border>
                    </VerticalStackLayout>
                </Grid>
            </ScrollView>
        </RefreshView>
    </SwipeView>
</core:BasePage>