<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.EntryPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Entry"
    Padding="20"
    x:DataType="core:EntryPageViewModel"
    BackgroundColor="Transparent"
    Loaded="BasePage_Loaded">
    <core:BasePage.Resources>
        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Entry allows you to enter and edit a single line of text. In addition, the Entry can be used as a password field.
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Entry defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:String x:Key="ImageButtonControlInfo">
            The Button class defines an ImageSource property that allows you to display a small bitmap image on the Button, either alone or in combination with text. You can also specify how the text and image are arranged. The ImageSource property is of type ImageSource, which means that the bitmaps can be loaded from a file, embedded resource, URI, or stream.
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, sets the spacing between characters in the entered text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ClearButtonVisibility</strong>, of type <strong style="color:blue">ClearButtonVisibility</strong>, controls whether a clear button is displayed, which enables the user to clear the text. The default value of this property ensures that a clear button isn't displayed.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CursorPosition</strong>, of type <strong style="color:blue">int</strong>, defines the position of the cursor within the entry.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Keyboard</strong>, of type <strong style="color:blue">Keyboard</strong>, specifies the virtual keyboard that's displayed when entering text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HorizontalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the horizontal alignment of the text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsPassword</strong>, of type <strong style="color:blue">bool</strong>, specifies whether the entry should visually obscure typed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsTextPredictionEnabled</strong>, of type <strong style="color:blue">bool</strong>, controls whether text prediction and automatic text correction is enabled.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Placeholder</strong>, of type <strong style="color:blue">string</strong>, defines the text that's displayed when the control is empty.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">PlaceholderColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the placeholder text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnCommand</strong>, of type <strong style="color:blue">ICommand</strong>, defines the command to be executed when the return key is pressed.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnCommandParameter</strong>, of type <strong style="color:blue">object</strong>, specifies the parameter for the ReturnCommand.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnType</strong>, of type <strong style="color:blue">ReturnType</strong>, specifies the appearance of the return button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">SelectionLength</strong>, of type <strong style="color:blue">int</strong>, represents the length of selected text within the entry.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text entered into the entry.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the entered text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">VerticalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the vertical alignment of the text.
                            ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />

        <LinearItemsLayout
            x:Key="ChatLayout"
            ItemSpacing="10"
            Orientation="Vertical" />

        <DataTemplate x:Key="ChatCollectionViewItemTemplate" x:DataType="core:ChatMessageModel">
            <app:ChatBubbleContentView ComponentData="{x:Binding}" />
        </DataTemplate>
    </core:BasePage.Resources>

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <SwipeView>
        <SwipeView.LeftItems>
            <SwipeItems Mode="Execute">
                <SwipeItem
                    BackgroundColor="DarkGray"
                    Command="{x:Binding BackCommand}"
                    IconImageSource="{x:StaticResource FluentArrowCircleLeft48Regular}"
                    Text="Go back" />
            </SwipeItems>
        </SwipeView.LeftItems>
        <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
            <ScrollView>
                <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                    <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                        <Border
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <Grid>
                                <HorizontalStackLayout Spacing="10">
                                    <Image
                                        HeightRequest="25"
                                        Source="githublogo.png"
                                        VerticalOptions="Center"
                                        WidthRequest="25" />

                                    <Label
                                        HorizontalOptions="Start"
                                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                                        Text="Issues"
                                        VerticalOptions="Center" />
                                </HorizontalStackLayout>
                                <Border
                                    BackgroundColor="OrangeRed"
                                    HeightRequest="40"
                                    HorizontalOptions="End"
                                    StrokeShape="RoundRectangle 20"
                                    VerticalOptions="Center"
                                    WidthRequest="40">
                                    <Label
                                        FontAttributes="Bold"
                                        HorizontalOptions="Center"
                                        Text="{x:Binding ControlIssues.Count,
                                                         Mode=OneWay}"
                                        VerticalOptions="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <CollectionView
                            Grid.Row="1"
                            Margin="0,0,0,0"
                            ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                            ItemsLayout="{x:StaticResource ControlIssueLayout}"
                            ItemsSource="{x:Binding ControlIssues,
                                                    Mode=OneWay}"
                            SelectedItem="{x:Binding SelectedControlIssue,
                                                     Mode=TwoWay}"
                            SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                            SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                         Mode=OneWay}"
                            SelectionMode="Single"
                            VerticalOptions="Start" />
                        <Border
                            Grid.Row="2"
                            Margin="0,0,0,10"
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="5">
                                <Label
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="Found a new bug?"
                                    TextColor="White"
                                    TextDecorations="Underline" />
                                <Button
                                    Command="{x:Binding OpenUrlCommand}"
                                    CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                    Text="Report to the MAUI team" />
                            </VerticalStackLayout>
                        </Border>
                    </Grid>
                    <VerticalStackLayout Grid.Column="1" Spacing="20">
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="Subtitle"
                                    Text="{x:StaticResource PropertiesListHeader}"
                                    TextDecorations="Underline" />
                                <CollectionView
                                    Footer="{x:StaticResource PropertiesListFooter}"
                                    ItemsSource="{x:StaticResource PropertiesItemsSource}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding Content}" />
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="Subtitle"
                                    Text="{x:Binding Content1}"
                                    TextDecorations="Underline" />
                                <CollectionView
                                    Footer="{x:StaticResource PropertiesListFooter}"
                                    ItemsSource="{x:Binding EntryList}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding Content2}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Create an Entry  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding CreateAnEntryHeader}" />
                                <Label Text="{x:Binding Content3}" />
                                <Entry
                                    x:Name="entry"
                                    Completed="OnEntryCompleted"
                                    Placeholder="Enter text"
                                    TextChanged="OnEntryTextChanged" />
                                <core:SourceCodeExpander Code="{x:Binding CreateAnEntryXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:Binding Content4}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateAnEntryCSharpCode}" CodeType="CSharp" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding CreateAnEntryNote}" />
                                <Label Text="{x:Binding Content5}" />
                                <Label Text="{x:Binding Content6}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateAnEntryCSharpCode1}" CodeType="CSharp" />
                                <Label Text="{x:Binding Content7}" />
                                <core:SourceCodeExpander Code="{x:Binding CreateAnEntryCSharpCode2}" CodeType="CSharp" />
                                <Label Text="{x:Binding Content8}" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding CreateAnEntryNote1}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Set character spacing  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding SetCharacterSpacingHeader}" />
                                <Label Text="{x:Binding SetCharacterSpacing}" />
                                <Entry CharacterSpacing="10" Placeholder="Type the text to see the behavior" />
                                <core:SourceCodeExpander Code="{x:Binding SetCharacterSpacingXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:Binding SetCharacterSpacing1}" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding SetCharacterSpacingNote}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Limit input length  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding LimitInputLengthHeader}" />
                                <Label Text="{x:Binding LimitInputLength}" />
                                <Entry MaxLength="10" Placeholder="Type the text to see the behavior" />
                                <core:SourceCodeExpander Code="{x:Binding LimitInputLengthXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:Binding LimitInputLength1}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Set the cursor position and text selection length  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding SetTheCursorPositionAndTextSelectionLengthHeader}" />
                                <Label Text="{x:Binding SetTheCursorPositionAndTextSelectionLength}" />
                                <Entry CursorPosition="5" Text="Cursor position set" />
                                <core:SourceCodeExpander Code="{x:Binding SetTheCursorPositionAndTextSelectionLengthXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:Binding SetTheCursorPositionAndTextSelectionLength1}" />
                                <Label Text="{x:Binding SetTheCursorPositionAndTextSelectionLength2}" />
                                <Entry
                                    CursorPosition="2"
                                    SelectionLength="10"
                                    Text="Cursor position and selection length set" />
                                <core:SourceCodeExpander Code="{x:Binding SetTheCursorPositionAndTextSelectionLengthXamlCode1}" CodeType="Xaml" />
                                <Label Text="{x:Binding SetTheCursorPositionAndTextSelectionLength3}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Display a clear button  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding DisplayAClearButtonHeader}" />
                                <Label Text="{x:Binding DisplayAClearButton}" />
                                <CollectionView ItemsSource="{x:Binding DisplayAClearButtonList}" Style="{x:StaticResource PropertiesListStyle}" />
                                <core:SourceCodeExpander Code="{x:Binding DisplayAClearButtonXamlCode}" CodeType="Xaml" />
                                <Entry ClearButtonVisibility="WhileEditing" Text=".NET MAUI" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Transform text  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding TransformTextHeader}" />
                                <Label Text="{x:Binding TransformText}" />
                                <CollectionView ItemsSource="{x:Binding TransformTextList}" Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding TransformText1}" />
                                <Entry Text="This text will be displayed in uppercase." TextTransform="Uppercase" />
                                <core:SourceCodeExpander Code="{x:Binding TransformTextXamlCode}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Obscure text entry  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding ObscureTextEntryHeader}" />
                                <Label Text="{x:Binding ObscureTextEntry}" />
                                <Entry IsPassword="True" />
                                <core:SourceCodeExpander Code="{x:Binding ObscureTextEntryXamlCode}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Customize the keyboard  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding CustomizeTheKeyboardHeader}" />
                                <Label Text="{x:Binding CustomizeTheKeyboard}" />
                                <CollectionView ItemsSource="{x:Binding CustomizeTheKeyboardList}" Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding CustomizeTheKeyboard1}" />
                                <Entry Keyboard="Chat" />
                                <core:SourceCodeExpander Code="{x:Binding CustomizeTheKeyboardXamlCode}" CodeType="Xaml" />
                                <Label Text="{x:Binding CustomizeTheKeyboard2}" />
                                <CollectionView ItemsSource="{x:Binding CustomizeTheKeyboardList1}" Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding CustomizeTheKeyboard3}" />
                                <core:SourceCodeExpander Code="{x:Binding CustomizeTheKeyboardXamlCode1}" CodeType="Xaml" />
                                <Label Text="{x:Binding CustomizeTheKeyboard4}" />
                                <core:SourceCodeExpander Code="{x:Binding CustomizeTheKeyboardCSharpCode}" CodeType="CSharp" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Customize the return key  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding CustomizeTheReturnKeyHeader}" />
                                <Label Text="{x:Binding CustomizeTheReturnKey}" />
                                <CollectionView ItemsSource="{x:Binding CustomizeTheReturnKeyList}" Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding CustomizeTheKeyboard1}" />
                                <Entry ReturnType="Send" />
                                <core:SourceCodeExpander Code="{x:Binding CustomizeTheReturnKeyXamlCode}" CodeType="Xaml" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding CustomizeTheReturnKeyNote}" />
                                <Label Text="{x:Binding CustomizeTheKeyboard2}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Hide and show the soft input keyboard  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding HideAndShowTheSoftInputKeyboardHeader}" />
                                <Label Text="{x:Binding HideAndShowTheSoftInputKeyboard}" />
                                <CollectionView ItemsSource="{x:Binding HideAndShowTheSoftInputKeyboardList}" Style="{x:StaticResource PropertiesListStyle}" />
                                <Label Text="{x:Binding HideAndShowTheSoftInputKeyboard1}" />
                                <core:SourceCodeExpander Code="{x:Binding HideAndShowTheSoftInputKeyboardCSharpCode}" CodeType="CSharp" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Enable and disable spell checking  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding EnableAndDisableSpellCheckingHeader}" />
                                <Label Text="{x:Binding EnableAndDisableSpellChecking}" />
                                <Label Text="{x:Binding EnableAndDisableSpellChecking1}" />
                                <Entry IsSpellCheckEnabled="True" />
                                <core:SourceCodeExpander Code="{x:Binding EnableAndDisableSpellCheckingXamlCode}" CodeType="CSharp" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding EnableAndDisableSpellCheckingNote}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Enable and disable text prediction  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding EnableAndDisableTextPredictionHeader}" />
                                <Label Text="{x:Binding EnableAndDisableTextPrediction}" />
                                <Label Text="{x:Binding EnableAndDisableTextPrediction1}" />
                                <Entry IsTextPredictionEnabled="True" />
                                <core:SourceCodeExpander Code="{x:Binding EnableAndDisableTextPredictionXamlCode}" CodeType="CSharp" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding EnableAndDisableTextPredictionNote}" />
                            </VerticalStackLayout>
                        </Border>
                        <!--  Prevent text entry  -->
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="{x:Binding PreventTextEntryHeader}" />
                                <Label Text="{x:Binding PreventTextEntry}" />
                                <Entry IsReadOnly="true" Text="User input won't be accepted." />
                                <core:SourceCodeExpander Code="{x:Binding PreventTextEntryXamlCode}" CodeType="CSharp" />
                                <core:DocumentAlert AlertType="Note" Text="{x:Binding PreventTextEntryNote}" />
                            </VerticalStackLayout>
                        </Border>
                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="We used entry for chatting" />
                                <Label Text="With the support of ReturnCommand you can fire an event with the return key and this also work for windows Enter key" />
                                <Border Padding="20" StrokeShape="RoundRectangle 4">
                                    <CollectionView
                                        EmptyView="Send some messages"
                                        ItemTemplate="{x:StaticResource ChatCollectionViewItemTemplate}"
                                        ItemsLayout="{x:StaticResource ChatLayout}"
                                        ItemsSource="{x:Binding Messages}"
                                        ItemsUpdatingScrollMode="KeepLastItemInView" />
                                </Border>
                                <Label
                                    BackgroundColor="{x:StaticResource Primary}"
                                    HorizontalOptions="Center"
                                    Text="No need for a send button just hit enter"
                                    TextColor="{x:StaticResource White}" />
                                <Entry
                                    x:Name="ChatboxEntry"
                                    Placeholder="Type in some message and press Enter !!!"
                                    ReturnCommand="{x:Binding SendMessageCommand}"
                                    ReturnCommandParameter="{x:Binding TextMessage}"
                                    Text="{x:Binding TextMessage,
                                                     Mode=TwoWay}" />
                            </VerticalStackLayout>
                        </Border>
                    </VerticalStackLayout>
                </Grid>
            </ScrollView>
        </RefreshView>
    </SwipeView>
</core:BasePage>