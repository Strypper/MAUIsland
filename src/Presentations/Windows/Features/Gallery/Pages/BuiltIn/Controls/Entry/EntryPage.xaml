<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.EntryPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Entry"
    Padding="10"
    x:DataType="app:EntryPageViewModel"
    BackgroundColor="Transparent">
    <core:BasePage.Resources>
        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Entry allows you to enter and edit a single line of text. In addition, the Entry can be used as a password field.
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Entry defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:String x:Key="ImageButtonControlInfo">
            The Button class defines an ImageSource property that allows you to display a small bitmap image on the Button, either alone or in combination with text. You can also specify how the text and image are arranged. The ImageSource property is of type ImageSource, which means that the bitmaps can be loaded from a file, embedded resource, URI, or stream.
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, sets the spacing between characters in the entered text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ClearButtonVisibility</strong>, of type <strong style="color:blue">ClearButtonVisibility</strong>, controls whether a clear button is displayed, which enables the user to clear the text. The default value of this property ensures that a clear button isn't displayed.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CursorPosition</strong>, of type <strong style="color:blue">int</strong>, defines the position of the cursor within the entry.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Keyboard</strong>, of type <strong style="color:blue">Keyboard</strong>, specifies the virtual keyboard that's displayed when entering text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HorizontalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the horizontal alignment of the text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsPassword</strong>, of type <strong style="color:blue">bool</strong>, specifies whether the entry should visually obscure typed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsTextPredictionEnabled</strong>, of type <strong style="color:blue">bool</strong>, controls whether text prediction and automatic text correction is enabled.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Placeholder</strong>, of type <strong style="color:blue">string</strong>, defines the text that's displayed when the control is empty.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">PlaceholderColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the placeholder text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnCommand</strong>, of type <strong style="color:blue">ICommand</strong>, defines the command to be executed when the return key is pressed.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnCommandParameter</strong>, of type <strong style="color:blue">object</strong>, specifies the parameter for the ReturnCommand.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ReturnType</strong>, of type <strong style="color:blue">ReturnType</strong>, specifies the appearance of the return button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">SelectionLength</strong>, of type <strong style="color:blue">int</strong>, represents the length of selected text within the entry.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text entered into the entry.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the entered text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">VerticalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the vertical alignment of the text.
                            ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />

        <LinearItemsLayout
            x:Key="ChatLayout"
            ItemSpacing="10"
            Orientation="Vertical" />

        <DataTemplate x:Key="ChatCollectionViewItemTemplate" x:DataType="app:ChatMessageModel">
            <app:ChatBubbleContentView ComponentData="{x:Binding}" />
        </DataTemplate>
    </core:BasePage.Resources>

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
        <ScrollView>
            <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                    <Border
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <Grid>
                            <HorizontalStackLayout Spacing="10">
                                <Image
                                    HeightRequest="25"
                                    Source="githublogo.png"
                                    VerticalOptions="Center"
                                    WidthRequest="25" />

                                <Label
                                    HorizontalOptions="Start"
                                    Style="{x:StaticResource DocumentSectionTitleStyle}"
                                    Text="Issues"
                                    VerticalOptions="Center" />
                            </HorizontalStackLayout>
                            <Border
                                BackgroundColor="OrangeRed"
                                HeightRequest="40"
                                HorizontalOptions="End"
                                StrokeShape="RoundRectangle 20"
                                VerticalOptions="Center"
                                WidthRequest="40">
                                <Label
                                    FontAttributes="Bold"
                                    HorizontalOptions="Center"
                                    Text="{x:Binding ControlIssues.Count,
                                                     Mode=OneWay}"
                                    VerticalOptions="Center" />
                            </Border>
                        </Grid>
                    </Border>
                    <CollectionView
                        Grid.Row="1"
                        Margin="0,0,0,0"
                        ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                        ItemsLayout="{x:StaticResource ControlIssueLayout}"
                        ItemsSource="{x:Binding ControlIssues,
                                                Mode=OneWay}"
                        SelectedItem="{x:Binding SelectedControlIssue,
                                                 Mode=TwoWay}"
                        SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                        SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                     Mode=OneWay}"
                        SelectionMode="Single"
                        VerticalOptions="Start" />
                    <Border
                        Grid.Row="2"
                        Margin="0,0,0,10"
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="5">
                            <Label
                                HorizontalOptions="Center"
                                HorizontalTextAlignment="Center"
                                Text="Found a new bug?"
                                TextColor="White"
                                TextDecorations="Underline" />
                            <Button
                                Command="{x:Binding OpenUrlCommand}"
                                CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                Text="Report to the MAUI team" />
                        </VerticalStackLayout>
                    </Border>
                </Grid>
                <VerticalStackLayout Grid.Column="1" Spacing="20">
                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                    </Border>
                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <CollectionView
                            Footer="{x:StaticResource PropertiesListFooter}"
                            Header="{x:StaticResource PropertiesListHeader}"
                            ItemsSource="{x:StaticResource PropertiesItemsSource}"
                            Style="{x:StaticResource PropertiesListStyle}" />
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Create Entry With Place Holder" />
                            <Grid>
                                <Entry
                                    x:Name="Entry"
                                    HorizontalTextAlignment="Start"
                                    Placeholder="Enter text here"
                                    PlaceholderColor="LightSlateGray"
                                    VerticalTextAlignment="Center" />
                            </Grid>
                            <core:SourceCodeExpander Code="{x:Binding StandardEntryXamlCode}" CodeType="Xaml" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="We used entry for chatting" />
                            <Label Text="With the support of ReturnCommand you can fire an event with the return key and this also work for windows Enter key" />
                            <Border Padding="20" StrokeShape="RoundRectangle 4">
                                <CollectionView
                                    EmptyView="Send some messages"
                                    ItemTemplate="{x:StaticResource ChatCollectionViewItemTemplate}"
                                    ItemsLayout="{x:StaticResource ChatLayout}"
                                    ItemsSource="{x:Binding Messages}"
                                    ItemsUpdatingScrollMode="KeepLastItemInView" />
                            </Border>
                            <Label
                                BackgroundColor="{x:StaticResource Primary}"
                                HorizontalOptions="Center"
                                Text="No need for a send button just hit enter"
                                TextColor="{x:StaticResource White}" />
                            <Entry
                                x:Name="ChatboxEntry"
                                Placeholder="Type in some message and press Enter !!!"
                                ReturnCommand="{x:Binding SendMessageCommand}"
                                ReturnCommandParameter="{x:Binding Source={x:Reference ChatboxEntry},
                                                                   Path=Text}" />
                        </VerticalStackLayout>
                    </Border>
                </VerticalStackLayout>
            </Grid>
        </ScrollView>
    </RefreshView>
</core:BasePage>