<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.IndicatorViewPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    x:Name="root"
    Title="Indicator View"
    Padding="10"
    x:DataType="app:IndicatorViewPageViewModel"
    BackgroundColor="Transparent">
    <core:BasePage.Resources>

        <x:String x:Key="ControlInfo">The .NET Multi-platform App UI (.NET MAUI) IndicatorView is a control that displays indicators that represent the number of items, and current position, in a CarouselView:</x:String>

        <x:String x:Key="PropertiesListHeader">
            IndicatorView defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:String x:Key="DemonstrateMessage">
            The CarouselView currently very buggy on WinUI it can't decide the width it need to stretch the item inside, leading the indicator also confuse to calculate the position.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Count</strong>, of type <strong style="color:blue">int</strong>, the number of indicators.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HideSingle</strong>, of type <strong style="color:blue">bool</strong>, indicates whether the indicator should be hidden when only one exists. The default value is <strong style="color:blue">true</strong>.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                               <strong style="color:blue">IndicatorColor</strong>, of type <strong style="color:blue">Color</strong>, the color of the indicators.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IndicatorSize</strong>, of type <strong style="color:blue">double</strong>, the size of the indicators. The default value is 6.0.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IndicatorLayout</strong>, of type <strong style="color:blue">Layout.View</strong>, defines the layout class used to render the IndicatorView. This property is set by .NET MAUI, and does not typically need to be set by developers.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IndicatorTemplate</strong>, of type <strong style="color:blue">DataTemplate</strong>, the template that defines the appearance of each indicator.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IndicatorsShape</strong>, of type <strong style="color:blue">IndicatorShape</strong>, the shape of each indicator.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ItemsSource</strong>, of type <strong style="color:blue">IEnumerable</strong>, the collection that indicators will be displayed for. This property will automatically be set when the <strong style="color:blue">CarouselView.IndicatorView</strong> property is set.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">MaximumVisible</strong>, of type <strong style="color:blue">int</strong>, the maximum number of visible indicators. The default value is <strong style="color:blue">int.MaxValue</strong>.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Position</strong>, of type <strong style="color:blue">int</strong>, the currently selected indicator index. This property uses a <strong style="color:blue">TwoWay</strong> binding. This property will automatically be set when the <strong style="color:blue">CarouselView.IndicatorView</strong> property is set.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">SelectedIndicatorColor</strong>, of type <strong style="color:blue">Color</strong>, the color of the indicator that represents the current item in the CarouselView.
                            ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="CarouseViewTemplate1" x:DataType="app:Cats">
            <StackLayout>
                <Frame
                    BorderColor="Blue"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"
                    WidthRequest="120">
                    <StackLayout>
                        <Label Text="{Binding Name}" />
                        <Label Text="{Binding Description}" />
                    </StackLayout>
                </Frame>
            </StackLayout>
        </DataTemplate>

    </core:BasePage.Resources>
    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>
    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
            </Border>
            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <CollectionView
                    Margin="10"
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                    SelectionMode="Single"
                    Style="{x:StaticResource PropertiesListStyle}"
                    VerticalScrollBarVisibility="Never" />
            </Border>
            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        Margin="0,0,0,10"
                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                        Text="Demonstration" />
                    <Label Text="{x:StaticResource DemonstrateMessage}" />
                    <Grid
                        Background="White"
                        HeightRequest="1"
                        VerticalOptions="End" />

                    <StackLayout HorizontalOptions="Start">
                        <CarouselView
                            HorizontalScrollBarVisibility="Never"
                            IndicatorView="indicatorView1"
                            ItemTemplate="{x:StaticResource CarouseViewTemplate1}"
                            ItemsSource="{x:Binding Cats}"
                            Loop="False"
                            WidthRequest="120" />
                        <IndicatorView
                            x:Name="indicatorView1"
                            IndicatorColor="LightGray"
                            SelectedIndicatorColor="DarkGray" />
                    </StackLayout>
                    <core:SourceCodeExpander Code="{x:Binding StandardIndicatorViewXamlCode}" />
                </VerticalStackLayout>
            </Border>
        </VerticalStackLayout>
    </ScrollView>
</core:BasePage>