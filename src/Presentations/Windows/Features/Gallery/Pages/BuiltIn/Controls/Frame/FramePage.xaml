<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.FramePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Frame"
    Padding="20"
    x:DataType="app:FramePageViewModel"
    BackgroundColor="Transparent">

    <core:BasePage.Resources>

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Frame is used to wrap a view or layout with a border that can be configured with color, shadow, and other options. Frames can be used to create borders around controls but can also be used to create more complex UI.
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Frame defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">BorderColor</strong>, of type <strong style="color:blue">Color </strong>, determines the color of the Frame border.

                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CornerRadius</strong>, of type <strong style="color:blue">float</strong>, determines the rounded radius of the corner.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HasShadow</strong>, of type <strong style="color:blue">bool</strong>, determines whether the frame has a drop shadow.
                            ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="PropertiesItemsSource2" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                The <strong style="color:blue">CornerRadius</strong>  property of the Frame control is one approach to creating a circle image. The following XAML shows how to create a circle image with a Frame:

                            ]]>
            </x:String>

        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />

    </core:BasePage.Resources>

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
        <ScrollView>
            <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                    <Border
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <Grid>
                            <HorizontalStackLayout Spacing="10">
                                <Image
                                    HeightRequest="25"
                                    Source="githublogo.png"
                                    VerticalOptions="Center"
                                    WidthRequest="25" />

                                <Label
                                    HorizontalOptions="Start"
                                    Style="{x:StaticResource DocumentSectionTitleStyle}"
                                    Text="Issues"
                                    VerticalOptions="Center" />
                            </HorizontalStackLayout>
                            <Border
                                BackgroundColor="OrangeRed"
                                HeightRequest="40"
                                HorizontalOptions="End"
                                StrokeShape="RoundRectangle 20"
                                VerticalOptions="Center"
                                WidthRequest="40">
                                <Label
                                    FontAttributes="Bold"
                                    HorizontalOptions="Center"
                                    Text="{x:Binding ControlIssues.Count,
                                                     Mode=OneWay}"
                                    VerticalOptions="Center" />
                            </Border>
                        </Grid>
                    </Border>
                    <CollectionView
                        Grid.Row="1"
                        Margin="0,0,0,0"
                        EmptyView="Looks like this control is stable !!!"
                        ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                        ItemsLayout="{x:StaticResource ControlIssueLayout}"
                        ItemsSource="{x:Binding ControlIssues,
                                                Mode=OneWay}"
                        SelectedItem="{x:Binding SelectedControlIssue,
                                                 Mode=TwoWay}"
                        SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                        SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                     Mode=OneWay}"
                        SelectionMode="Single"
                        VerticalOptions="Start" />
                    <Border
                        Grid.Row="2"
                        Margin="0,0,0,10"
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="5">
                            <Label
                                HorizontalOptions="Center"
                                HorizontalTextAlignment="Center"
                                Text="Found a new bug?"
                                TextColor="White"
                                TextDecorations="Underline" />
                            <Button
                                Command="{x:Binding OpenUrlCommand}"
                                CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                Text="Report to the MAUI team" />
                        </VerticalStackLayout>
                    </Border>
                </Grid>
                <VerticalStackLayout Grid.Column="1" Spacing="20">
                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                    </Border>
                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <CollectionView
                            Footer="{x:StaticResource PropertiesListFooter}"
                            Header="{x:StaticResource PropertiesListHeader}"
                            ItemsSource="{x:StaticResource PropertiesItemsSource}"
                            Style="{x:StaticResource PropertiesListStyle}" />
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="20">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" 
                                    Text="Create a Frame" />
                            <Label Text="A Frame object typically wraps another control, such as a Label:" />
                            <Frame>
                                <Label Text="Frame wrapped around a Label" TextColor="White" />
                            </Frame>
                            <core:SourceCodeExpander Code="{x:Binding StandardCreateFrameXamlCode}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="20">
                            <Label Text="The appearance of Frame objects can be customized by setting properties:" />
                            <Frame
                                BackgroundColor="DimGrey"
                                BorderColor="Grey"
                                CornerRadius="10">
                                <Label Text="Frame wrapped around a Label" />
                            </Frame>
                            <core:SourceCodeExpander Code="{x:Binding CreateTheSecondFrameXamlCode}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="20">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" 
                                   Text="Create a card with a Frame" />
                            <Label Text="The following XAML shows how to create a card with a Frame:" />
                            <Frame Padding="10"
                                   BackgroundColor="White"
                                   BorderColor="Gray"
                                   CornerRadius="8"
                                   HeightRequest="150"
                                   WidthRequest="200">
                                <StackLayout>
                                    <Label FontAttributes="Bold"
                                           FontSize="14"
                                           Text="Card Example"
                                           TextColor="Black" />
                                    <BoxView HeightRequest="2"
                                             HorizontalOptions="Fill"
                                             Color="Gray" />
                                    <Label Text="Frames can wrap more complex layouts to create more complex UI components, such as this card!" 
                                           TextColor="Black" />
                                </StackLayout>
                            </Frame>
                            <core:SourceCodeExpander Code="{x:Binding CreateACardWithAFrameXamlCode}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="20">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Round elements" />
                            <CollectionView ItemsSource="{x:StaticResource PropertiesItemsSource2}" 
                                        Style="{x:StaticResource PropertiesListStyle}" />
                            <Frame Padding="20"
                               BorderColor="Black"
                               CornerRadius="60"
                               HeightRequest="120"
                               WidthRequest="120"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               IsClippedToBounds="True">
                                <Image HeightRequest="80"
                                   WidthRequest="80" 
                                   HorizontalOptions="Center"
                                   VerticalOptions="Center"
                                   Source="{x:Binding ControlInformation.ControlIcon}"/>
                            </Frame>
                            <core:SourceCodeExpander Code="{x:Binding RoundElementsXamlCode}" />
                        </VerticalStackLayout>
                    </Border>
                </VerticalStackLayout>
            </Grid>
        </ScrollView>
    </RefreshView>
</core:BasePage>