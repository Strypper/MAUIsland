<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.EditorPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Editor"
    Padding="20"
    x:DataType="app:EditorPageViewModel"
    BackgroundColor="Transparent">

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <core:BasePage.Resources>
        <core:StringToColorConverter x:Key="StringToColorConverter" />
        <app:EditorTextTransformPickerConverter x:Key="TextTransformConverter" />
        
        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Editor allows you to enter and edit multiple lines of text.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Editor defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="LabelColorResource" Type="{x:Type x:String}">
            <x:String>Red</x:String>
            <x:String>Blue</x:String>
            <x:String>Green</x:String>
            <x:String>White</x:String>
            <x:String>Black</x:String>
            <x:String>Cyan</x:String>
        </x:Array>
        
        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   <strong style="color:blue">AutoSize</strong>, of type <strong style="color:blue">EditorAutoSizeOption</strong>, defines whether the editor will change size to accommodate user input. By default, the editor doesn't auto size.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, sets the spacing between characters in the entered text.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CursorPosition</strong>, of type <strong style="color:blue">int</strong>, defines the position of the cursor within the editor.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the text will reflect scaling preferences set in the operating system. The default value of this property is true.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">HorizontalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the horizontal alignment of the text.   ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">IsTextPredictionEnabled</strong>, of type <strong style="color:blue">bool</strong>, controls whether text prediction and automatic text correction is enabled.   ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">Placeholder</strong>, of type <strong style="color:blue">string</strong>, defines the text that's displayed when the control is empty.   ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">PlaceholderColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the placeholder text. ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">SelectionLength</strong>, of type <strong style="color:blue">int</strong>, represents the length of selected text within the editor. ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text entered into the editor. ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the entered text.    ]]>
            </x:String>

            <x:String>
                <![CDATA[   <strong style="color:blue">VerticalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the vertical alignment of the text.   ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />
    </core:BasePage.Resources>

    <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
        <ScrollView>
            <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                    <Border
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <Grid>
                            <HorizontalStackLayout Spacing="10">
                                <Image
                                    HeightRequest="25"
                                    Source="githublogo.png"
                                    VerticalOptions="Center"
                                    WidthRequest="25" />

                                <Label
                                    HorizontalOptions="Start"
                                    Style="{x:StaticResource DocumentSectionTitleStyle}"
                                    Text="Issues"
                                    VerticalOptions="Center" />
                            </HorizontalStackLayout>
                            <Border
                                BackgroundColor="OrangeRed"
                                HeightRequest="40"
                                HorizontalOptions="End"
                                StrokeShape="RoundRectangle 20"
                                VerticalOptions="Center"
                                WidthRequest="40">
                                <Label
                                    FontAttributes="Bold"
                                    HorizontalOptions="Center"
                                    Text="{x:Binding ControlIssues.Count,
                                                     Mode=OneWay}"
                                    VerticalOptions="Center" />
                            </Border>
                        </Grid>
                    </Border>
                    <CollectionView
                        Grid.Row="1"
                        Margin="0,0,0,0"
                        EmptyView="Looks like this control is stable !!!"
                        ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                        ItemsLayout="{x:StaticResource ControlIssueLayout}"
                        ItemsSource="{x:Binding ControlIssues,
                                                Mode=OneWay}"
                        SelectedItem="{x:Binding SelectedControlIssue,
                                                 Mode=TwoWay}"
                        SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                        SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                     Mode=OneWay}"
                        SelectionMode="Single"
                        VerticalOptions="Start" />
                    <Border
                        Grid.Row="2"
                        Margin="0,0,0,10"
                        Padding="20"
                        BackgroundColor="#272b33"
                        StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="5">
                            <Label
                                HorizontalOptions="Center"
                                HorizontalTextAlignment="Center"
                                Text="Found a new bug?"
                                TextColor="White"
                                TextDecorations="Underline" />
                            <Button
                                Command="{x:Binding OpenUrlCommand}"
                                CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                Text="Report to the MAUI team" />
                        </VerticalStackLayout>
                    </Border>
                </Grid>
                <VerticalStackLayout Grid.Column="1" Spacing="20">
                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <Label FontSize="Subtitle" 
                               Text="{x:StaticResource ControlInfo}" />
                    </Border>
                    <Border Padding="20" 
                            StrokeShape="RoundRectangle 4">
                        <CollectionView Footer="{x:StaticResource PropertiesListFooter}"
                                Header="{x:StaticResource PropertiesListHeader}"
                                ItemsSource="{x:StaticResource PropertyItemsSource}"
                                Style="{x:StaticResource PropertiesListStyle}" />
                    </Border>
                    
                    <Border Padding="20" 
                            StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Simple Editor" />
                            <Editor HeightRequest="150"
                                    Placeholder="Enter your response here"
                                    TextChanged="OnEditorTextChanged"
                                    Completed="OnEditorCompleted"/>
                            <Label FontAttributes="Bold"
                                   Text="Here is the behavior of old text and new text:"
                                   TextDecorations="Underline" />
                            <Label>
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="Old Text: " />
                                        <Span x:Name="OldTextSpan" Text="Your old text"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Label>
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="New Text: " />
                                        <Span x:Name="NewTextSpan" Text="Your new text"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Label Text=""/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlSimpleEditor}" />
                            <Label Text=""/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpSimpleEditorCodeBehind}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Editor With TextColor and CharacterSpacing" />
                            <Frame BackgroundColor="#313131" 
                                   BorderColor="#313131">
                                <Grid ColumnDefinitions="0.7*, 0.3*" 
                                      RowDefinitions="0.3*, 0.7*" 
                                      ColumnSpacing="10"
                                      RowSpacing="10"
                                      HeightRequest="200">
                                    <VerticalStackLayout Grid.Row="0"
                                                 Grid.Column="0">
                                        <Label Text="Set character spacing" TextColor="#bfbfbf"/>
                                        <Slider x:Name="EditorCharacterSpacingSlider"
                                                Maximum="50"
                                                Minimum="0"/>
                                    </VerticalStackLayout>
                                    <Picker x:Name="EditorColorPicker"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Title="Text Color"
                                            ItemsSource="{x:StaticResource LabelColorResource}"
                                            SelectedIndex="5"/>
                                    <Editor Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            CharacterSpacing="{x:Binding Source={x:Reference EditorCharacterSpacingSlider},
                                                                         Path=Value,
                                                                         Mode=TwoWay}"
                                            Placeholder="Type something in buddy"
                                            TextColor="{x:Binding Source={x:Reference EditorColorPicker},
                                                                  Path=SelectedItem,
                                                                  Converter={x:StaticResource StringToColorConverter}}"/>
                                </Grid>
                            </Frame>
                            <Label Text="This is how the Xaml look like"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorDecoration}"/>
                            <Label Text="Here is the String To Color Converter"/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpEditorDecorationConverter}" />
                            <Label Text="This is how the converter setup"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorDecorationConverterDeclare}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Editor With Input Length and AutoSize" />
                            <Frame BackgroundColor="#313131" 
                                   BorderColor="#313131">
                                <Grid ColumnDefinitions="0.7*, 0.3*"
                                      ColumnSpacing="10">
                                    <Label Grid.Column="0" IsVisible="{x:Binding Source={x:Reference Editor2}, Path=IsFocused}" 
                                           VerticalOptions="End" 
                                           HorizontalOptions="End"
                                           Margin="5">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span x:Name="Editor2TextLenghtLabelSpan" 
                                                      Text="{x:Binding Source={x:Reference Editor2}, 
                                                                       Path= Text.Length}"/>
                                                <Span Text="/"/>
                                                <Span Text="{x:Binding EditorCharacterLimit}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Editor x:Name="Editor2" Grid.Column="0"
                                            Text="Enter text here"
                                            AutoSize="{x:Binding AutoSizeMode}"
                                            MaxLength="{x:Binding EditorCharacterLimit}"
                                            TextChanged="OnEditorGetTextLength"/>
                                    <VerticalStackLayout Grid.Column="1"
                                                         Spacing="5">
                                        <Label Text="Limit Your Editor"/>
                                        <Frame BackgroundColor="#4d4d4d" 
                                               BorderColor="#4d4d4d" 
                                               Padding="10">
                                            <Grid ColumnDefinitions="0.7*, 0.2*" 
                                                  ColumnSpacing="10">
                                                <Slider x:Name="CharacterLimitSlider" 
                                                        Grid.Column="0" 
                                                        Maximum="1000" 
                                                        Minimum="1" 
                                                        Value="{x:Binding EditorCharacterLimit}"/>
                                                <Label Grid.Column="1" 
                                                       Text="{x:Binding EditorCharacterLimit}" 
                                                       VerticalOptions="Center"
                                                       HorizontalOptions="Center"/>
                                            </Grid>
                                        </Frame>
                                        <Label Text="Change AutoSize Mode"/>
                                        <Button Text="{x:Binding AutoSizeMode}"
                                                Command="{x:Binding ChangeAutoSizeModeCommand}" />
                                    </VerticalStackLayout>
                                </Grid>
                            </Frame>

                            <Label Text="This is how the Xaml"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorTextLengthAndAutoSize}"/>
                            <Label Text="Here is the ViewModel content"/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpEditorTextLengthAndAutoSize}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Editor Transform Text" />
                            <Frame BackgroundColor="#313131" 
                                   BorderColor="#313131">
                                <Grid ColumnDefinitions="0.8*, 0.2*"
                                      ColumnSpacing="10">
                                    <Editor Grid.Column="0"
                                            Text="Enter text here"
                                            TextTransform="{x:Binding SelectedTextTransform}"/>
                                    <Picker Grid.Column="1"
                                            SelectedIndex="0"
                                            ItemsSource="{x:Binding TextTransformList, Mode=OneWay}"
                                            SelectedItem="{x:Binding SelectedTextTransform, Mode=TwoWay, Converter={StaticResource TextTransformConverter}}"/>
                                </Grid>
                            </Frame>

                            <Label Text="This is Xaml code"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorTransformText}"/>
                            <Label Text="Here is the Text Transform Picker Converter"/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpEditorTransformTextConverter}" />
                            <Label Text="This is how the converter setup"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorTransformTextConverterDeclare}" />
                            <Label Text="Here is ViewModel code"/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpEditorTransformTextViewModel}" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Padding="20" StrokeShape="RoundRectangle 4">
                        <VerticalStackLayout Spacing="10">
                            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Editor with Prediction and Prevent Text Entry" />
                            <Frame BackgroundColor="#313131" 
                                   BorderColor="#313131">
                                <Grid ColumnDefinitions="0.8*, 0.2*"
                                      ColumnSpacing="10">
                                    <Editor Grid.Column="0"
                                            Text="Enter text here"
                                            IsTextPredictionEnabled="{x:Binding IsTextPrediction}"
                                            IsReadOnly="{x:Binding IsReadOnly}"/>
                                    <VerticalStackLayout Grid.Column="1">
                                        <Label Text="Text Prediction" />
                                        <Switch IsToggled="{x:Binding IsTextPrediction, Mode=TwoWay}"/>
                                        <Label Text="Read Only" />
                                        <Switch IsToggled="{x:Binding IsReadOnly, Mode=TwoWay}"/>
                                    </VerticalStackLayout>
                                </Grid>
                            </Frame>

                            <Label Text="This is Xaml code"/>
                            <core:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlEditorPredictionReadOnly}"/>
                            <Label Text="Here is ViewModel code"/>
                            <core:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpEditorPredictionReadOnlyViewModel}" />
                        </VerticalStackLayout>
                    </Border>
                </VerticalStackLayout>
            </Grid>
        </ScrollView>
    </RefreshView>
</core:BasePage>