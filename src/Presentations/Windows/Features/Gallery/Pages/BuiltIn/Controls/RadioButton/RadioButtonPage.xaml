<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.RadioButtonPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    Title="Radio Button"
    Padding="20"
    x:DataType="core:RadioButtonPageViewModel"
    BackgroundColor="Transparent"
    Loaded="BasePage_Loaded">

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <core:BasePage.Resources>

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) RadioButton is a type of button that allows users to select one option from a set. Each option is represented by one radio button, and you can only select one radio button in a group.
        </x:String>

        <x:String x:Key="ReportIssueToMauiTeamLink">
            https://github.com/dotnet/maui/issues/new/choose
        </x:String>

        <x:Array x:Key="RadioButtonExplanation" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   In <strong style="color:blue">.NET MAUI</strong>, when you place <strong style="color:blue">RadioButton</strong> controls inside a layout (like <strong style="color:blue">HorizontalStackLayout</strong>), they automatically behave as a group, even without explicitly setting the <strong style="color:blue">GroupName</strong> property. This is why your first example works as expected.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   When you place <strong style="color:blue">RadioButton</strong> controls inside a layout, they are aware of each other because they share the same parent in the visual tree. So, when one <strong style="color:blue">RadioButton</strong> is selected, the others are automatically deselected, ensuring that only one <strong style="color:blue">RadioButton</strong> in the layout can be selected at a time.   ]]>
            </x:String>
        </x:Array>

        <x:String x:Key="PropertiesListHeader">
            RadioButton defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   <strong style="color:blue">Content</strong>, of type <strong style="color:blue">object</strong>, which defines the <strong style="color:blue">string</strong> or View to be displayed by the RadioButton.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">IsChecked</strong>, of type <strong style="color:blue">bool</strong>, which defines whether the RadioButton is checked. This property uses a <strong style="color:blue">TwoWay</strong> binding, and has a default value of <strong style="color:blue">false</strong>.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">GroupName</strong>, of type <strong style="color:blue">string</strong>, which defines the name that specifies which RadioButton controls are mutually exclusive. This property has a default value of <strong style="color:blue">null</strong>.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">Value</strong>, of type <strong style="color:blue">object</strong>, which defines an optional unique value associated with the RadioButton.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">BorderColor</strong>, of type <strong style="color:blue">Color</strong>, which defines the border stroke color.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">BorderWidth</strong>, of type <strong style="color:blue">double</strong>, which defines the width of the RadioButton border. ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, which defines the spacing between characters of any displayed text.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CornerRadius</strong>, of type <strong style="color:blue">int</strong>, which defines the corner radius of the RadioButton.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, which determines text style.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, which defines whether an app's UI reflects text scaling preferences set in the operating system. The default value of this property is <strong style="color:blue">true</strong>.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, which defines the font family.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, which defines the font size.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, which defines the color of any displayed text.    ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">TextTransform</strong>, of type <strong style="color:blue">TextTransform</strong>, which defines the casing of any displayed text.   ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="ControlIssueItemTemplate" x:DataType="core:ControlIssueModel">
            <Border
                Padding="20"
                BackgroundColor="#0a0c10"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Micro"
                        LineBreakMode="CharacterWrap"
                        MaxLines="2"
                        Text="{x:Binding Title,
                                         Mode=OneWay}"
                        TextDecorations="Underline"
                        ToolTipProperties.Text="{x:Binding Title,
                                                           Mode=OneWay}" />
                    <HorizontalStackLayout Spacing="8">
                        <ImageButton
                            CornerRadius="25"
                            HeightRequest="10"
                            Source="{x:Binding AvatarUrl,
                                               Mode=OneWay}"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                        <Label Text="{x:Binding OwnerName, Mode=OneWay}" VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <Label HorizontalOptions="End" Text="{x:Binding CreatedDate, Mode=OneWay}" />
                </VerticalStackLayout>
            </Border>
        </DataTemplate>

        <LinearItemsLayout
            x:Key="ControlIssueLayout"
            ItemSpacing="5"
            Orientation="Vertical" />

        <FontImageSource
            x:Key="Happy"
            FontFamily="{x:Static core:FontNames.FluentSystemIconsRegular}"
            Glyph="{Static core:FluentUIIcon.Ic_fluent_emoji_28_regular}"
            Size="60"
            Color="Black" />
        <FontImageSource
            x:Key="Normal"
            FontFamily="{x:Static core:FontNames.FluentSystemIconsRegular}"
            Glyph="{Static core:FluentUIIcon.Ic_fluent_emoji_smile_slight_24_regular}"
            Size="60"
            Color="Black" />
        <FontImageSource
            x:Key="Sad"
            FontFamily="{x:Static core:FontNames.FluentSystemIconsRegular}"
            Glyph="{Static core:FluentUIIcon.Ic_fluent_emoji_sad_24_regular}"
            Size="60"
            Color="Black" />

        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CheckedStates">
                        <VisualState x:Name="Checked">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="Green" />
                                <Setter Property="Opacity" Value="1" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="OrangeRed" />
                                <Setter Property="Opacity" Value="0.5" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <ControlTemplate x:Key="RadioButtonTemplate">
            <Border
                Padding="5"
                BackgroundColor="#F3F2F1"
                HorizontalOptions="FillAndExpand"
                Stroke="#F3F2F1"
                StrokeShape="RoundRectangle 10"
                StrokeThickness="2"
                VerticalOptions="FillAndExpand">
                <Grid HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                    <Grid
                        HeightRequest="20"
                        HorizontalOptions="End"
                        VerticalOptions="End"
                        WidthRequest="20">
                        <Ellipse
                            x:Name="Outcheck"
                            Fill="#53e6a1"
                            HeightRequest="20"
                            HorizontalOptions="Center"
                            Stroke="white"
                            VerticalOptions="Center"
                            WidthRequest="20" />
                        <Ellipse
                            x:Name="Check"
                            Fill="Black"
                            HeightRequest="10"
                            HorizontalOptions="Center"
                            VerticalOptions="Center"
                            WidthRequest="10" />
                    </Grid>
                    <ContentPresenter />
                </Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CheckedStates">
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="#ffffff" />
                                    <Setter TargetName="Check" Property="Opacity" Value="1" />
                                    <Setter TargetName="Outcheck" Property="Opacity" Value="1" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="Transparent" />
                                    <Setter TargetName="Check" Property="Opacity" Value="0" />
                                    <Setter TargetName="Outcheck" Property="Opacity" Value="0" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </ControlTemplate>

    </core:BasePage.Resources>

    <SwipeView>
        <SwipeView.LeftItems>
            <SwipeItems Mode="Execute">
                <SwipeItem
                    BackgroundColor="DarkGray"
                    Command="{x:Binding BackCommand}"
                    IconImageSource="{x:StaticResource FluentArrowCircleLeft48Regular}"
                    Text="Go back" />
            </SwipeItems>
        </SwipeView.LeftItems>
        <RefreshView Command="{x:Binding RefreshCommand}" IsRefreshing="{x:Binding IsBusy, Mode=OneWay}">
            <ScrollView>
                <Grid ColumnDefinitions="310, *" ColumnSpacing="20">
                    <Grid RowDefinitions="90, 540, 120" RowSpacing="10">
                        <Border
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <Grid>
                                <HorizontalStackLayout Spacing="10">
                                    <Image
                                        HeightRequest="25"
                                        Source="githublogo.png"
                                        VerticalOptions="Center"
                                        WidthRequest="25" />

                                    <Label
                                        HorizontalOptions="Start"
                                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                                        Text="Issues"
                                        VerticalOptions="Center" />
                                </HorizontalStackLayout>
                                <Border
                                    BackgroundColor="OrangeRed"
                                    HeightRequest="40"
                                    HorizontalOptions="End"
                                    StrokeShape="RoundRectangle 20"
                                    VerticalOptions="Center"
                                    WidthRequest="40">
                                    <Label
                                        FontAttributes="Bold"
                                        HorizontalOptions="Center"
                                        Text="{x:Binding ControlIssues.Count,
                                                         Mode=OneWay}"
                                        VerticalOptions="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <CollectionView
                            Grid.Row="1"
                            Margin="0,0,0,0"
                            EmptyView="{x:Binding EmptyViewText,
                                                  Mode=OneWay}"
                            ItemTemplate="{x:StaticResource ControlIssueItemTemplate}"
                            ItemsLayout="{x:StaticResource ControlIssueLayout}"
                            ItemsSource="{x:Binding ControlIssues,
                                                    Mode=OneWay}"
                            SelectedItem="{x:Binding SelectedControlIssue,
                                                     Mode=TwoWay}"
                            SelectionChangedCommand="{x:Binding OpenUrlCommand}"
                            SelectionChangedCommandParameter="{x:Binding SelectedControlIssue.IssueLinkUrl,
                                                                         Mode=OneWay}"
                            SelectionMode="Single"
                            VerticalOptions="Start" />
                        <Border
                            Grid.Row="2"
                            Margin="0,0,0,10"
                            Padding="20"
                            BackgroundColor="#272b33"
                            StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="5">
                                <Label
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="Found a new bug?"
                                    TextColor="White"
                                    TextDecorations="Underline" />
                                <Button
                                    Command="{x:Binding OpenUrlCommand}"
                                    CommandParameter="{x:StaticResource ReportIssueToMauiTeamLink}"
                                    Text="Report to the MAUI team" />
                            </VerticalStackLayout>
                        </Border>
                    </Grid>
                    <VerticalStackLayout Grid.Column="1" Spacing="20">

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Spacing="10">
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="Subtitle"
                                    Text="{x:StaticResource PropertiesListHeader}"
                                    TextDecorations="Underline" />
                                <CollectionView
                                    Footer="{x:StaticResource PropertiesListFooter}"
                                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Basic radio button" />
                                <CollectionView ItemsSource="{x:StaticResource RadioButtonExplanation}" Style="{x:StaticResource PropertiesListStyle}" />
                                <VerticalStackLayout Spacing="5">
                                    <Label Text="What's your favorite pet?" />
                                    <!--  Without GroupName  -->
                                    <HorizontalStackLayout>
                                        <RadioButton Content="Cat" IsChecked="True" />
                                        <RadioButton Content="Dog" />
                                        <RadioButton Content="Fish" />
                                        <RadioButton Content="Bird" />
                                    </HorizontalStackLayout>
                                    <Label Text="What's your favorite mode of transport?" />
                                    <!--  With GroupName  -->
                                    <HorizontalStackLayout>
                                        <RadioButton
                                            Content="Car"
                                            GroupName="Transport"
                                            IsChecked="True" />
                                        <RadioButton Content="Bike" GroupName="Transport" />
                                        <RadioButton Content="Motocrycle" GroupName="Transport" />
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout>
                                        <RadioButton Content="Bus" GroupName="Transport" />
                                        <RadioButton Content="Train" GroupName="Transport" />
                                        <RadioButton Content="Walking" GroupName="Transport" />
                                    </HorizontalStackLayout>
                                    <Label Text="What's your favorite type of music?" />
                                    <!--  With GroupName in parent  -->
                                    <HorizontalStackLayout RadioButtonGroup.GroupName="Transport">
                                        <RadioButton Content="Rock" IsChecked="True" />
                                        <RadioButton Content="Pop" />
                                        <RadioButton Content="Jazz" />
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout RadioButtonGroup.GroupName="Transport">
                                        <RadioButton Content="Classical" />
                                        <RadioButton Content="Country" />
                                        <RadioButton Content="Hip Hop" />
                                    </HorizontalStackLayout>
                                </VerticalStackLayout>
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10">
                                <Label Text="This is example code:" />
                                <core:SourceCodeExpander Code="{x:Binding StandardRadioButtonXamlCode}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Image radio button" />
                                <VerticalStackLayout>
                                    <RadioButton
                                        BackgroundColor="White"
                                        CornerRadius="5"
                                        IsChecked="True">
                                        <RadioButton.Content>
                                            <ContentView Padding="5,0,5,0">
                                                <Image Source="{x:StaticResource Happy}" WidthRequest="30" />
                                            </ContentView>
                                        </RadioButton.Content>
                                    </RadioButton>
                                    <RadioButton BackgroundColor="White" CornerRadius="5">
                                        <RadioButton.Content>
                                            <ContentView Padding="5,0,5,0">
                                                <Image Source="{x:StaticResource Normal}" WidthRequest="30" />
                                            </ContentView>
                                        </RadioButton.Content>
                                    </RadioButton>
                                    <RadioButton BackgroundColor="White" CornerRadius="5">
                                        <RadioButton.Content>
                                            <ContentView Padding="5,0,5,0">
                                                <Image Source="{x:StaticResource Sad}" WidthRequest="30" />
                                            </ContentView>
                                        </RadioButton.Content>
                                    </RadioButton>
                                </VerticalStackLayout>
                                <Label Text="This is how you can setup your resource: " />
                                <core:SourceCodeExpander Code="{x:Binding XamlImageRadioButtonStaticResource}" CodeType="Xaml" />
                                <Label Text="This is the Xaml code: " />
                                <core:SourceCodeExpander Code="{x:Binding XamlImageRadioButton}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Respond to RadioButton state changes" />
                                <Label Text="What's your favorite mode of transport?" />
                                <HorizontalStackLayout RadioButtonGroup.GroupName="{x:Binding TransportGroupName}" RadioButtonGroup.SelectedValue="{x:Binding SelectedTransportItem}">
                                    <RadioButton
                                        Content="Car"
                                        GroupName="{x:Binding TransportGroupName}"
                                        IsChecked="True"
                                        Value="Car" />
                                    <RadioButton
                                        Content="Bike"
                                        GroupName="{x:Binding TransportGroupName}"
                                        Value="Bike" />
                                    <RadioButton
                                        Content="Train"
                                        GroupName="{x:Binding TransportGroupName}"
                                        Value="Train" />
                                    <RadioButton
                                        Content="Walking"
                                        GroupName="{x:Binding TransportGroupName}"
                                        Value="Walking" />
                                </HorizontalStackLayout>
                                <Label x:Name="Label">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="You have chosen: " />
                                            <Span Text="{x:Binding SelectedTransportItem}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Text="This is ViewModel source code" />
                                <core:SourceCodeExpander Code="{x:Binding CSharpRadioButtonState}" CodeType="CSharp" />
                                <Label Text="This is xaml source code" />
                                <core:SourceCodeExpander Code="{x:Binding XamlRadioButtonState}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="RadioButton visual states" />
                                <Label Text="What's your favorite mode of transport?" />
                                <HorizontalStackLayout>
                                    <RadioButton
                                        Content="Car"
                                        IsChecked="True"
                                        Style="{x:StaticResource RadioButtonStyle}" />
                                    <RadioButton Content="Bike" Style="{x:StaticResource RadioButtonStyle}" />
                                    <RadioButton Content="Train" Style="{x:StaticResource RadioButtonStyle}" />
                                    <RadioButton Content="Walking" Style="{x:StaticResource RadioButtonStyle}" />
                                </HorizontalStackLayout>
                                <Label Text="This is the RadioButton style" />
                                <core:SourceCodeExpander Code="{x:Binding XamlRadioButtonVisualStateStyle}" CodeType="Xaml" />
                                <Label Text="This is xaml source code" />
                                <core:SourceCodeExpander Code="{x:Binding XamlRadioButtonVisualStates}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Text and Image radio button with custom template" />
                                <HorizontalStackLayout
                                    x:Name="EmotionalRadioButtonGroupWithCustomTemplate"
                                    RadioButtonGroup.GroupName="Emotional"
                                    Spacing="20">
                                    <RadioButton ControlTemplate="{x:StaticResource RadioButtonTemplate}" IsChecked="True">
                                        <RadioButton.Content>
                                            <VerticalStackLayout>
                                                <Image Source="{x:StaticResource Happy}" />
                                                <Label Text="Happy" TextColor="Black" />
                                            </VerticalStackLayout>
                                        </RadioButton.Content>
                                    </RadioButton>
                                    <RadioButton ControlTemplate="{x:StaticResource RadioButtonTemplate}">
                                        <RadioButton.Content>
                                            <VerticalStackLayout>
                                                <Image Source="{x:StaticResource Normal}" />
                                                <Label Text="Normal" TextColor="Black" />
                                            </VerticalStackLayout>
                                        </RadioButton.Content>
                                    </RadioButton>
                                    <RadioButton ControlTemplate="{x:StaticResource RadioButtonTemplate}">
                                        <RadioButton.Content>
                                            <VerticalStackLayout>
                                                <Image Source="{x:StaticResource Sad}" />
                                                <Label Text="Sad" TextColor="Black" />
                                            </VerticalStackLayout>
                                        </RadioButton.Content>
                                    </RadioButton>
                                </HorizontalStackLayout>
                            </VerticalStackLayout>
                        </Border>

                        <Border Padding="20" StrokeShape="RoundRectangle 4">
                            <VerticalStackLayout Padding="10" Spacing="10">
                                <Label Text="This is the xaml code" />
                                <core:SourceCodeExpander Code="{x:Binding XamlCustomRadioButton}" CodeType="Xaml" />
                                <Label Text="This is the Resource for the image" />
                                <core:SourceCodeExpander Code="{x:Binding XamlImageRadioButtonStaticResource}" CodeType="Xaml" />
                                <Label Text="This is the custom ControlTemplate" />
                                <core:SourceCodeExpander Code="{x:Binding XamlCustomRadioButtonControlTemplate}" CodeType="Xaml" />
                            </VerticalStackLayout>
                        </Border>

                    </VerticalStackLayout>
                </Grid>
            </ScrollView>
        </RefreshView>
    </SwipeView>
</core:BasePage>