<?xml version="1.0" encoding="utf-8" ?>
<core:BasePage
    x:Class="MAUIsland.MaterialChipPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:core="clr-namespace:MAUIsland.Core;assembly=MAUIsland.Core"
    xmlns:mdc="clr-namespace:Material.Components.Maui;assembly=Material.Components.Maui"
    Title="MaterialChip"
    Padding="20"
    x:DataType="core:MaterialChipPageViewModel"
    BackgroundColor="Transparent">

    <core:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="github_logo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </core:BasePage.ToolbarItems>

    <core:BasePage.Resources>

        <x:String x:Key="PropertiesListHeader">
            MaterialChip defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
        <strong style="color:blue">IsChecked</strong>, of type <strong style="color:blue">bool</strong>, Switch's selected state.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">HasIcon</strong>, of type <strong style="color:blue">bool</strong>, enable check-mark icon of the Switch.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">TrackColor</strong>, of type <strong style="color:blue">Color</strong>, Switch's track color.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">ThumbColor</strong>, of type <strong style="color:blue">Color</strong>, Switch's thumb color.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">Shape</strong>, of type <strong style="color:blue">Shape</strong>, corner radius of the Switch's border.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">OutlineColor</strong>, of type <strong style="color:blue">Color</strong>, Switch's border color.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">RippleColor</strong>, of type <strong style="color:blue">Color</strong>, Switch's ripple color.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">Command</strong>, of type <strong style="color:blue">ICommand</strong>, executed when the Switch is CheckedChanged.
    ]]>
            </x:String>
            <x:String>
                <![CDATA[
        <strong style="color:blue">CommandParameter</strong>, of type <strong style="color:blue">object</strong>, Command's parameter.
    ]]>
            </x:String>
        </x:Array>


    </core:BasePage.Resources>

    <SwipeView>
        <SwipeView.LeftItems>
            <SwipeItems Mode="Execute">
                <SwipeItem
                    BackgroundColor="DarkGray"
                    Command="{x:Binding BackCommand}"
                    IconImageSource="{x:StaticResource FluentArrowCircleLeft48Regular}"
                    Text="Go back" />
            </SwipeItems>
        </SwipeView.LeftItems>
        <ScrollView>
            <VerticalStackLayout Spacing="20">
                <Border Padding="20" StrokeShape="RoundRectangle 4">
                    <Label FontSize="Subtitle" Text="{x:Binding ControlInformation.ControlDetail}" />
                </Border>
                <Border Padding="20" StrokeShape="RoundRectangle 4">
                    <CollectionView
                        Footer="{x:StaticResource PropertiesListFooter}"
                        Header="{x:StaticResource PropertiesListHeader}"
                        ItemsSource="{x:StaticResource PropertiesItemsSource}"
                        Style="{x:StaticResource PropertiesListStyle}" />
                </Border>
                <Border Padding="20" StrokeShape="RoundRectangle 4">
                    <VerticalStackLayout Spacing="10">
                        <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Styles" />
                        <Label Text="There are 7 styles of chips: 1. Assist, 2. AssistElevated, 3. Filter, 4. FilterElevated 5. Input, 6. Suggestion, 7. SuggestionElevated." />
                        <core:HorizontalWrapLayout Spacing="5">
                            <mdc:Chip Style="{DynamicResource AssistChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource AssistElevatedChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource FilterChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource FilterElevatedChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource InputChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource SuggestionChipStyle}" Text="chip" />
                            <mdc:Chip Style="{DynamicResource SuggestionElevatedChipStyle}" Text="chip" />
                        </core:HorizontalWrapLayout>
                        <core:SourceCodeExpander Code="{x:Binding ChipXamlCode}" CodeType="Xaml" />
                    </VerticalStackLayout>
                </Border>
            </VerticalStackLayout>
        </ScrollView>
    </SwipeView>
</core:BasePage>