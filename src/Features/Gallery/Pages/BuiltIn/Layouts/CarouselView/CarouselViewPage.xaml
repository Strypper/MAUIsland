<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.CarouselViewPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="Carousel View"
    Padding="20"
    x:DataType="app:CarouselViewPageViewModel"
    BackgroundColor="Transparent">
    
    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>
    <app:BasePage.Resources>
        <x:String x:Key="PropertiesListHeader">
            CarouselView defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   <strong style="color:blue">ItemsSource</strong>, of type <strong style="color:blue">IEnumerable</strong>, sets the collection of items to be displayed in the carousel.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">ItemTemplate</strong>, of type <strong style="color:blue">DataTemplate</strong>, defines the presentation of the data in the carousel.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">Position</strong>, of type <strong style="color:blue">int</strong>, gets or sets the currently selected item.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CurrentItem</strong>, of type <strong style="color:blue">object</strong>, represents the current item being displayed. This property has a default binding mode of TwoWay, and has a null value when there isn't any data to display.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CurrentItemChangedCommand</strong>, of type <strong style="color:blue">ICommand</strong>, is executed when the current item changes.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CurrentItemChangedCommandParameter</strong>, of type <strong style="color:blue">object</strong>, is the parameter that's passed to the CurrentItemChangedCommand.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">CurrentItemChangedEventArgs</strong>, of type <strong style="color:blue">object</strong>, accompanies the CurrentItemChanged event and has two properties, both of type object: PreviousItem – the previous item, after the property change. CurrentItem – the current item, after the property change.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">ItemsLayout</strong>, of type <strong style="color:blue">IItemsLayout</strong>, defines the strategy for laying out the items in the carousel.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">PeekAreaInsets</strong>, of type <strong style="color:blue">Thickness</strong>, gets or sets the insets for the visible area that peeks into the non-visible area.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">IsBounceEnabled</strong>, of type <strong style="color:blue">bool</strong>, gets or sets whether bouncing is enabled for the carousel.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">IsScrollAnimated</strong>, of type <strong style="color:blue">bool</strong>, gets or sets whether scrolling is animated.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">IsSwipeEnabled</strong>, of type <strong style="color:blue">bool</strong>, gets or sets whether swiping is enabled.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">IsScrolling</strong>, of type <strong style="color:blue">bool</strong>, gets a value that indicates whether the user is scrolling the carousel.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">Loop</strong>, of type <strong style="color:blue">bool</strong>, gets or sets whether the carousel should loop.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">RemainingItemsThreshold</strong>, of type <strong style="color:blue">int</strong>, gets or sets the threshold of items not yet visible in the list at which the RemainingItemsThresholdReached event will be fired.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">RemainingItemsThresholdReachedCommand</strong>, of type <strong style="color:blue">ICommand</strong>, gets or sets the command that will be executed when the RemainingItemsThreshold is reached.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">RemainingItemsThresholdReachedCommandParameter</strong>, of type <strong style="color:blue">object</strong>, which is the parameter that's passed to the <strong style="color:blue">RemainingItemsThresholdReachedCommand</strong>.  ]]>
            </x:String>
        </x:Array>
        
        <x:Array x:Key="CarouselViewInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The CarouselView in .NET Multi-platform App UI (.NET MAUI) is a user interface element that allows data to be displayed in a layout that can be scrolled through. Users can swipe to navigate through a set of items.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   CarouselView, by default, arranges its items horizontally. It shows one item at a time on the screen, and users can swipe left or right to navigate through the items. It also has the capability to show indicators for each item in the collection.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   CarouselView offers a looping feature. This means if a user swipes back from the first item, they will see the last item in the collection. Similarly, swiping forward from the last item will bring them back to the first item.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   CarouselView shares a lot of its functionality with CollectionView. However, they are used for different purposes. CollectionView is generally used for displaying long lists of data, while CarouselView is more suited for showcasing a limited number of items. For more details about CollectionView, please refer to the CollectionView documentation.  ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="CarouselViewDataTemplateSelector" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The appearance of each item in the CarouselView can be chosen at runtime, based on the item value, and by using converter.  ]]>
            </x:String>
            <x:String>
                <![CDATA[   Set the CarouselView.ItemTemplate property to a DataTemplateSelector object. DataTemplateSelector class defines DataTemplate properties that are set to different data templates. Apply logic to return the desired template in slector class.  ]]>
            </x:String>
        </x:Array>

        <DataTemplate x:Key="NormalDataTemplate" x:DataType="app:CarouselItem">
            <StackLayout>
                <Frame
                    BorderColor="DarkGray"
                    CornerRadius="5"
                    HasShadow="True"
                    HeightRequest="300"
                    HorizontalOptions="Center"
                    VerticalOptions="Center">
                    <StackLayout>
                        <Label
                            FontAttributes="Bold"
                            FontSize="20"
                            HorizontalOptions="Center"
                            Text="{Binding Title}"
                            VerticalOptions="Center" />
                        <Image
                            Aspect="AspectFill"
                            HeightRequest="150"
                            HorizontalOptions="Center"
                            Source="microsoft.png"
                            WidthRequest="150" />
                        <Label HorizontalOptions="Center" Text="{Binding Content}" />
                    </StackLayout>
                </Frame>
            </StackLayout>
        </DataTemplate>

        <DataTemplate x:Key="HighlightedDataTemplate" x:DataType="app:CarouselItem">
            <StackLayout>
                <Frame
                    Margin="20"
                    BackgroundColor="GreenYellow"
                    BorderColor="Black"
                    CornerRadius="5"
                    HasShadow="True"
                    HeightRequest="300"
                    HorizontalOptions="Center"
                    VerticalOptions="Center">
                    <StackLayout>
                        <Label
                            FontAttributes="Bold"
                            FontSize="20"
                            HorizontalOptions="Center"
                            Text="{Binding Title}"
                            VerticalOptions="Center" />
                        <Image
                            Aspect="AspectFill"
                            HeightRequest="150"
                            HorizontalOptions="Center"
                            Source="microsoft.png"
                            WidthRequest="150" />
                        <Label HorizontalOptions="Center" 
                               Text="{Binding Content}" />
                    </StackLayout>
                </Frame>
            </StackLayout>
        </DataTemplate>

        <DataTemplate x:Key="CarouselSwipeViewItemTemplate">
            <StackLayout>
                <Frame  Margin="20"
                        HeightRequest="300"
                        HorizontalOptions="Center"
                        VerticalOptions="CenterAndExpand" >
                    <SwipeView>
                        <SwipeView.TopItems>
                            <SwipeItems>
                                <SwipeItem Text="Favorite"
                                           IconImageSource="{x:Static app:FluentUIIcon.Ic_fluent_heart_24_regular}"
                                           BackgroundColor="LightGreen"
                                           Command="{x:Binding Path=BindingContext.SwipeViewFavoriteCommand, 
                                                               Source={x:RelativeSource AncestorType={x:Type ContentPage}}}"
                                           CommandParameter="{Binding}" />
                            </SwipeItems>
                        </SwipeView.TopItems>
                        <SwipeView.BottomItems>
                            <SwipeItems>
                                <SwipeItem Text="Delete"
                                           BackgroundColor="LightPink"
                                           IconImageSource="{x:Static app:FluentUIIcon.Ic_fluent_delete_24_regular}"
                                           Command="{x:Binding Path=BindingContext.SwipeViewDeleteCommand, 
                                                               Source={x:RelativeSource AncestorType={x:Type ContentPage}}}"
                                           CommandParameter="{Binding}"/>
                            </SwipeItems>
                        </SwipeView.BottomItems>
                        <StackLayout x:DataType="app:CarouselItem">
                            <Label FontAttributes="Bold"
                                   FontSize="20"
                                   HorizontalOptions="Center"
                                   Text="{Binding Title}"
                                   VerticalOptions="Center" />
                            <Image Aspect="AspectFill"
                                   HeightRequest="150"
                                   HorizontalOptions="Center"
                                   Source="microsoft.png"
                                   WidthRequest="150" />
                            <Label HorizontalOptions="Center" 
                                   Text="{Binding Content}" />
                        </StackLayout>
                    </SwipeView>
                </Frame>
            </StackLayout>
        </DataTemplate>

        <DataTemplate x:Key="CollectionViewDataTemplate" x:DataType="app:CarouselItem">
            <StackLayout>
                <Frame BorderColor="DarkGray"
                       CornerRadius="5"
                       HasShadow="True"
                       VerticalOptions="Center"
                       Margin="5">
                    <HorizontalStackLayout HorizontalOptions="Center">
                        <Label Text="{Binding Content}" />
                    </HorizontalStackLayout>
                </Frame>
            </StackLayout>
        </DataTemplate>

        <app:ItemDataTemplateSelector
            x:Key="ItemDataTemplateSelector"
            HighlightedTemplate ="{x:StaticResource HighlightedDataTemplate}"
            NormalTemplate ="{x:StaticResource NormalDataTemplate}" />
        
    </app:BasePage.Resources>
    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <Label FontSize="Subtitle" 
                       Text="{x:Binding ControlInformation.ControlDetail}" />
            </Border>
            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout>
                    <Label FontSize="Subtitle" Text="{x:StaticResource ControlInfo}" />
                    <CollectionView Footer="{x:StaticResource PropertiesListFooter}"
                                    Header="{x:StaticResource PropertiesListHeader}"
                                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Overview" />
                    <CollectionView ItemsSource="{x:StaticResource CarouselViewInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Basic CarouselView" />
                    <CarouselView ItemTemplate="{x:StaticResource NormalDataTemplate}"
                                  ItemsSource="{x:Binding Items}" />
                    
                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView with DataTemplateSelector" />
                    <CollectionView ItemsSource="{x:StaticResource CarouselViewDataTemplateSelector}"
                                    Style="{x:StaticResource PropertiesListStyle}" />
                    <Label Text="CarouselView with first item highlighted:" />
                    <CarouselView x:Name="TemplateSelectorCarouselView" 
                                  ItemsSource="{x:Binding Items}" 
                                  ItemTemplate="{x:StaticResource ItemDataTemplateSelector}"
                                  Loop="False"/>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView with IndicatorView" />
                    <CarouselView IndicatorView="IndicatorView"
                                  ItemsSource="{x:Binding Items}" 
                                  ItemTemplate="{x:StaticResource NormalDataTemplate}"/>
                    <IndicatorView x:Name="IndicatorView"
                                   IndicatorColor="LightGray"
                                   SelectedIndicatorColor="Aqua"
                                   HorizontalOptions="Center" />

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView with SwipeView" />
                    <CarouselView ItemsSource="{x:Binding Items}" 
                                  ItemTemplate="{x:StaticResource CarouselSwipeViewItemTemplate}"/>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView with RefreshView" />
                    <RefreshView IsRefreshing="{Binding IsRefreshing}"
                                 Command="{Binding RefreshCommand}">
                        <CarouselView ItemsSource="{x:Binding Items}" 
                                      ItemTemplate="{x:StaticResource NormalDataTemplate}"/>
                    </RefreshView>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView Layout" />
                    <CarouselView 
                                  ItemsSource="{x:Binding Items}" 
                                  ItemTemplate="{x:StaticResource CarouselSwipeViewItemTemplate}"
                                  HorizontalOptions="FillAndExpand">
                        <CarouselView.ItemsLayout>
                            <LinearItemsLayout Orientation="Horizontal"/>
                        </CarouselView.ItemsLayout>
                    </CarouselView>
                    <Label Text="Note for the error: Vertical LinearItemsLayout and ItemSpacing are doom"/>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView Visible Adjacent Items" />
                    <CarouselView ItemsSource="{x:Binding Items}" 
                                  ItemTemplate="{x:StaticResource NormalDataTemplate}"/>
                    <Label Text="PeekAreaInsets ? doom"/>
                    
                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView Current Item Changing Respondsibility" />
                    <Grid ColumnDefinitions="0.3*, 0.7*" Padding="5" >

                        <CollectionView Grid.Column="0"
                                        ItemsSource="{x:Binding Items}"
                                        ItemTemplate="{x:StaticResource CollectionViewDataTemplate}"
                                        SelectedItem="{x:Binding CurrentSelectedItem}" 
                                        VerticalOptions="Center"/>
                        <CarouselView Grid.Column="1"
                                        ItemsSource="{x:Binding Items}" 
                                        ItemTemplate="{x:StaticResource NormalDataTemplate}"
                                        CurrentItem="{x:Binding CurrentSelectedItem}"
                                        VerticalOptions="Center"/>
                    </Grid>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>

            <Border Padding="20" StrokeShape="RoundRectangle 4">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="CarouselView EmptyView" />
                    <CarouselView ItemsSource="{x:Binding ItemEmptyList}" 
                                  ItemTemplate="{x:StaticResource NormalDataTemplate}"
                                  EmptyView="No items to display."/>

                    <!--<app:SourceCodeExpander Code="{x:Binding ControlTextInEditorXamlCode}" CodeType="Xaml" />-->
                </VerticalStackLayout>
            </Border>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>