<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.ButtonPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="Button"
    Padding="10"
    x:DataType="app:ButtonPageViewModel"
    BackgroundColor="Transparent">

    <app:BasePage.Resources>
        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Button displays text and responds to a tap or click that directs the app to carry out a task. A Button usually displays a short text string indicating a command, but it can also display a bitmap image, or a combination of text and an image. When the Button is pressed with a finger or clicked with a mouse it initiates that command.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Button defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>


        <x:String x:Key="ImageButtonControlInfo">
            The Button class defines an ImageSource property that allows you to display a small bitmap image on the Button, either alone or in combination with text. You can also specify how the text and image are arranged. The ImageSource property is of type ImageSource, which means that the bitmaps can be loaded from a file, embedded resource, URI, or stream.
        </x:String>


        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">BorderColor</strong>, of type <strong style="color:blue">Color</strong>, describes the border color of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">BorderWidth</strong>, of type <strong style="color:blue">double</strong>, defines the width of the button's border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, defines the spacing between characters of the button's text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Command</strong>, of type <strong style="color:blue">ICommand</strong>, defines the command that's executed when the button is tapped.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CommandParameter</strong>, of type <strong style="color:blue">object</strong>, is the parameter that's passed to Command.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ContentLayout</strong>, of type <strong style="color:blue">ButtonContentLayout</strong>, defines the object that controls the position of the button image and the spacing between the button's image and text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CornerRadius</strong>, of type <strong style="color:blue">int</strong>, describes the corner radius of the button's border.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the button text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">ImageSource</strong>, of type <strong style="color:blue">ImageSource</strong>, specifies a bitmap image to display as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">LineBreakMode</strong>, of type <strong style="color:blue">LineBreakMode</strong>, determines how text should be handled when it can't fit on one line.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Padding</strong>, of type <strong style="color:blue">Thickness</strong>, determines the button's padding.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text displayed as the content of the button.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, describes the color of the button's text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextTransform</strong>, of type <strong style="color:blue">TextTransform</strong>, defines the casing of the button's text.
                            ]]>
            </x:String>
        </x:Array>

    </app:BasePage.Resources>

    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="github.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="A simple button with text content" />
                    <Grid>
                        <Button
                            HorizontalOptions="Start"
                            IsEnabled="{x:Binding IsEnable}"
                            Text="Standard XAML Button"
                            VerticalOptions="Center" />
                        <HorizontalStackLayout HorizontalOptions="End">
                            <CheckBox IsChecked="{x:Binding IsEnable, Mode=TwoWay}" VerticalOptions="Center" />
                            <Label Text="Enable Button" VerticalOptions="Center" />
                        </HorizontalStackLayout>
                    </Grid>
                    <app:SourceCodeExpander XamlCode="{x:Binding StandardButtonXamlCode}" />
                </VerticalStackLayout>
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label
                        FontAttributes="Bold"
                        FontSize="Title"
                        Text="You can change the background color of the button" />

                    <ScrollView HorizontalOptions="Start" HorizontalScrollBarVisibility="Always">
                        <HorizontalStackLayout Spacing="10">
                            <Button
                                BackgroundColor="Green"
                                Text="Green"
                                TextColor="{x:StaticResource White}" />

                            <Button
                                BackgroundColor="Red"
                                Text="Red"
                                TextColor="{x:StaticResource White}" />

                            <Button
                                BackgroundColor="{x:StaticResource Primary}"
                                Text="Application Primary Color"
                                TextColor="{x:StaticResource White}" />

                            <!--  This button will be Cyan when in dark mode and Blue when light mode  -->
                            <Button
                                BackgroundColor="{x:AppThemeBinding Dark={x:StaticResource Cyan300Accent},
                                                                    Light={x:StaticResource Blue300Accent}}"
                                Text="Dark or Light mode color"
                                TextColor="{x:StaticResource Black}" />
                        </HorizontalStackLayout>
                    </ScrollView>
                    <app:SourceCodeExpander XamlCode="{x:Binding ButtonsChangedBackgroundGroupXamlCode}" />
                </VerticalStackLayout>
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="20">


                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Apply rotation to a button" />
                    <Button
                        Margin="40,0,0,0"
                        BackgroundColor="Red"
                        BorderColor="Black"
                        BorderWidth="2"
                        CharacterSpacing="4"
                        CornerRadius="30"
                        FontAttributes="Bold"
                        FontSize="18"
                        HeightRequest="70"
                        HorizontalOptions="Start"
                        LineBreakMode="WordWrap"
                        RotationX="10"
                        RotationY="30"
                        Text="MAUI Button Test"
                        TextColor="White"
                        VerticalOptions="Center"
                        WidthRequest="250" />
                    <app:SourceCodeExpander XamlCode="{x:Binding RotationButtonXamlCode}" />
                </VerticalStackLayout>
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Frame.Resources>
                    <FontImageSource
                        x:Key="HomeIcon"
                        FontFamily="{x:Static app:FontNames.FluentSystemIconsRegular}"
                        Glyph="{Static app:FluentUIIcon.Ic_fluent_home_20_regular}"
                        Color="{x:AppThemeBinding Dark={x:StaticResource Primary},
                                                  Light={x:StaticResource White}}" />

                    <FontImageSource
                        x:Key="DownloadIcon"
                        FontFamily="{x:Static app:FontNames.FluentSystemIconsRegular}"
                        Glyph="{Static app:FluentUIIcon.Ic_fluent_arrow_download_20_regular}"
                        Color="{x:AppThemeBinding Dark={x:StaticResource Primary},
                                                  Light={x:StaticResource White}}" />
                </Frame.Resources>
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Use bitmaps with buttons" />
                    <Label Text="{x:StaticResource ImageButtonControlInfo}" />
                    <HorizontalStackLayout Spacing="10">
                        <Button ImageSource="{x:StaticResource HomeIcon}" Text="Home" />

                        <Button ImageSource="{x:StaticResource DownloadIcon}" Text="Download" />
                    </HorizontalStackLayout>
                    <app:SourceCodeExpander XamlCode="{x:Binding ButtonWithImageXamlCode}" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>