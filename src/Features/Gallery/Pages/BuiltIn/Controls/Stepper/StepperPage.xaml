<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.StepperPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="Stepper"
    Padding="20"
    x:DataType="app:StepperPageViewModel"
    BackgroundColor="Transparent">

    <app:BasePage.Resources>
        <app:AgeToMrIncreadibleMemeConverter x:Key="AgeToMrIncreadibleMemeConverter" />
        <app:AgeToMrIncreadibleTitleMemeConverter x:Key="AgeToMrIncreadibleTitleMemeConverter" />

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Stepper enables a numeric value to be selected from a range of values. It consists of two buttons labeled with minus and plus signs. These buttons can be manipulated by the user to incrementally select a double value from a range of values.
        </x:String>

        <x:String x:Key="PropertiesListHeader1">
            The Stepper defines four properties of type double:P
        </x:String>

        <x:String x:Key="PropertiesListHeader2">
            The following example shows how to create a Stepper, with two Label objects:
        </x:String>

        <x:String x:Key="PropertiesListHeader3">
            The ValueChanged event handler can be eliminated by using data binding to respond to the Stepper value changing:
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Increment</strong> is the amount to change the selected value by, with a default value of 1.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Minimum</strong> is the minimum of the range, with a default value of 0.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Maximum</strong> is the maximum of the range, with a default value of 100.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Value</strong> is the stepper's value, which can range between <strong style="color:blue">Minimum</strong> and <strong style="color:blue">Maximum</strong> and has a default value of 0.
                            ]]>
            </x:String>
        </x:Array>
    </app:BasePage.Resources>
    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>
    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <CollectionView
                        Header="{x:StaticResource PropertiesListHeader1}"
                        ItemsSource="{x:StaticResource PropertyItemsSource}"
                        Style="{x:StaticResource PropertiesListStyle}" />
                    <Label
                        FontSize="Default"
                        HorizontalTextAlignment="Start"
                        Text="Stepper defines a ValueChanged event that's raised when the Value changes, either through user manipulation of the Stepper or when the application sets the Value property directly. A ValueChanged event is also raised when the Value property is coerced as previously described. The ValueChangedEventArgs object that accompanies the ValueChanged event has OldValue and NewValue, of type double. At the time the event is raised, the value of NewValue is the same as the Value property of the Stepper object."
                        VerticalTextAlignment="Start" />
                </VerticalStackLayout>
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="What types of women do you like?" />
                    <Label Text="{x:Binding Source={x:Reference AgeStepper}, Path=Value, Mode=OneWay, Converter={x:StaticResource AgeToMrIncreadibleTitleMemeConverter}}" />
                    <HorizontalStackLayout Spacing="5">
                        <VerticalStackLayout Spacing="5">
                            <Label>
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{x:Binding Source={x:Reference AgeStepper}, Path=Value}" />
                                        <Span Text=" Age" />
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Stepper
                                x:Name="AgeStepper"
                                BackgroundColor="Black"
                                Maximum="23"
                                Minimum="10"
                                Value="18" />
                        </VerticalStackLayout>

                        <Image
                            x:Name="MrIncreadibleImage"
                            HeightRequest="100"
                            Source="{x:Binding Source={x:Reference AgeStepper},
                                               Path=Value,
                                               Mode=OneWay,
                                               Converter={x:StaticResource AgeToMrIncreadibleMemeConverter}}"
                            WidthRequest="100" />
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </Frame>
            <!--  Create a Stepper  -->
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Create a Stepper" />
                    <CollectionView Header="{x:StaticResource PropertiesListHeader2}" Style="{x:StaticResource PropertiesListStyle}" />
                    <StackLayout Margin="20">
                        <Label
                            x:Name="_rotatingLabel"
                            FontSize="18"
                            HorizontalOptions="Center"
                            Text="ROTATING TEXT"
                            VerticalOptions="Center" />
                        <Stepper
                            BackgroundColor="Black"
                            HorizontalOptions="Center"
                            Increment="30"
                            Maximum="360"
                            ValueChanged="OnStepperValueChanged" />
                        <Label
                            x:Name="_displayLabel"
                            HorizontalOptions="Center"
                            Text="(uninitialized)"
                            VerticalOptions="Center" />
                    </StackLayout>
                    <app:SourceCodeExpander Code="{x:Binding StandardStepperXamlCode}" />
                </VerticalStackLayout>
            </Frame>

            <!--  Data bind a Stepper  -->
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Data bind a Stepper" />
                    <CollectionView Header="{x:StaticResource PropertiesListHeader3}" Style="{x:StaticResource PropertiesListStyle}" />
                    <StackLayout Margin="20">
                        <Label
                            FontSize="18"
                            HorizontalOptions="Center"
                            Rotation="{Binding Source={x:Reference _stepper}, Path=Value}"
                            Text="ROTATING TEXT"
                            VerticalOptions="Center" />
                        <Stepper
                            x:Name="_stepper"
                            BackgroundColor="Black"
                            HorizontalOptions="Center"
                            Increment="30"
                            Maximum="360" />
                        <Label
                            HorizontalOptions="Center"
                            Text="{Binding Source={x:Reference _stepper}, Path=Value, StringFormat='The Stepper value is {0:F0}'}"
                            VerticalOptions="Center" />
                    </StackLayout>
                    <app:SourceCodeExpander Code="{x:Binding DataBindAStepperXamlCode}" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>