<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.EditorPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="Editor"
    Padding="20"
    x:DataType="app:EditorPageViewModel">

    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <app:BasePage.Resources>
        <app:StringToColorConverter x:Key="StringToColorConverter" />

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Editor allows you to enter and edit multiple lines of text.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Editor defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="LabelColorResource" Type="{x:Type x:String}">
            <x:String>Red</x:String>
            <x:String>Blue</x:String>
            <x:String>Green</x:String>
            <x:String>White</x:String>
            <x:String>Black</x:String>
            <x:String>Cyan</x:String>
        </x:Array>
        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">AutoSize</strong>, of type <strong style="color:blue">EditorAutoSizeOption</strong>, defines whether the editor will change size to accommodate user input. By default, the editor doesn't auto size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, sets the spacing between characters in the entered text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CursorPosition</strong>, of type <strong style="color:blue">int</strong>, defines the position of the cursor within the editor.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HorizontalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the horizontal alignment of the text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsTextPredictionEnabled</strong>, of type <strong style="color:blue">bool</strong>, controls whether text prediction and automatic text correction is enabled.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Placeholder</strong>, of type <strong style="color:blue">string</strong>, defines the text that's displayed when the control is empty.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">PlaceholderColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the placeholder text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">SelectionLength</strong>, of type <strong style="color:blue">int</strong>, represents the length of selected text within the editor.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text entered into the editor.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the entered text.
                            ]]>
            </x:String>

            <x:String>
                <![CDATA[
                                <strong style="color:blue">VerticalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the vertical alignment of the text.
                            ]]>
            </x:String>
        </x:Array>
    </app:BasePage.Resources>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Simple editor" />
                    <Editor
                        x:Name="editor"
                        Completed="OnEditorCompleted"
                        HeightRequest="250"
                        Placeholder="Enter your response here"
                        TextChanged="OnEditorTextChanged" />
                    <Label
                        FontAttributes="Bold"
                        Text="Let's watch the behavior of how old text and new text change:"
                        TextDecorations="Underline" />
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Old Text:" />
                                <Span x:Name="OldTextSpan" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="New Text:" />
                                <Span x:Name="NewTextSpan" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <app:SourceCodeExpander Code="{x:Binding SimpleEditXamlCode}" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Set character spacing" />
                    <Slider
                        x:Name="EditorCharacterSpacingSlider"
                        Maximum="50"
                        Minimum="0" />

                    <Picker
                        x:Name="EditorColorPicker"
                        Title="Change Text Color"
                        ItemsSource="{x:StaticResource LabelColorResource}" />
                    <Editor
                        x:Name="CharacterSpacingEditor"
                        CharacterSpacing="{x:Binding Source={x:Reference EditorCharacterSpacingSlider},
                                                     Path=Value,
                                                     Mode=TwoWay}"
                        TextColor="{x:Binding Source={x:Reference EditorColorPicker},
                                              Path=SelectedItem,
                                              Converter={x:StaticResource StringToColorConverter}}" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>

</app:BasePage>