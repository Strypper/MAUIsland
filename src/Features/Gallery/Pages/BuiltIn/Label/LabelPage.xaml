<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.LabelPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="Label"
    Padding="10"
    x:DataType="app:LabelPageViewModel">
    <app:BasePage.Resources>
        <app:LineBreakModeEnumToStringConverter x:Key="LineBreakModeEnumToStringConverter" />

        <x:String x:Key="Lorem">
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
        </x:String>

        <x:String x:Key="ControlInfo">
            The .NET Multi-platform App UI (.NET MAUI) Label displays single-line and multi-line text. Text displayed by a Label can be colored, spaced, and can have text decorations.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Label defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">CharacterSpacing</strong>, of type <strong style="color:blue">double</strong>, sets the spacing between characters in the displayed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAttributes</strong>, of type <strong style="color:blue">FontAttributes</strong>, determines text style.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontAutoScalingEnabled</strong>, of type <strong style="color:blue">bool</strong>, defines whether the text will reflect scaling preferences set in the operating system. The default value of this property is true.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontFamily</strong>, of type <strong style="color:blue">string</strong>, defines the font family.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FontSize</strong>, of type <strong style="color:blue">double</strong>, defines the font size.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">FormattedText</strong>, of type <strong style="color:blue">FormattedString</strong>, specifies the presentation of text with multiple presentation options such as fonts and colors.

                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">HorizontalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the horizontal alignment of the displayed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">LineBreakMode</strong>, of type <strong style="color:blue">LineBreakMode</strong>, determines how text should be handled when it can't fit on one line.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">LineHeight</strong>, of type <strong style="color:blue">double</strong>, specifies the multiplier to apply to the default line height when displaying text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">MaxLines</strong>, of type <strong style="color:blue">int</strong>, indicates the maximum number of lines allowed in the Label.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Padding</strong>, of type <strong style="color:blue">Thickness</strong>, determines the label's padding.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text</strong>, of type <strong style="color:blue">string</strong>, defines the text displayed as the content of the label.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextColor</strong>, of type <strong style="color:blue">Color</strong>, defines the color of the displayed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextDecorations</strong>, of type <strong style="color:blue">TextDecorations</strong>, specifies the text decorations (underline and strikethrough) that can be applied.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextTransform</strong>, of type <strong style="color:blue">TextTransform</strong>, specifies the casing of the displayed text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">TextType</strong>, of type <strong style="color:blue">TextType</strong>, determines whether the Label should display plain text or HTML text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">VerticalTextAlignment</strong>, of type <strong style="color:blue">TextAlignment</strong>, defines the vertical alignment of the displayed text.
                            ]]>
            </x:String>
        </x:Array>
    </app:BasePage.Resources>
    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="github.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>
    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>

            <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Control text truncation and wrapping" />
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <HorizontalStackLayout Spacing="10">
                        <Picker
                            x:Name="LineBreakModePicker"
                            Title="Line Break Mode"
                            ItemsSource="{x:Binding LineBreakModes}"
                            SelectedIndex="{x:Binding SelectedLineBreakModeIndex,
                                                      Converter={x:StaticResource LineBreakModeEnumToStringConverter}}" />

                        <VerticalStackLayout Spacing="8">
                            <Label Text="Adjust maximum lines" />
                            <HorizontalStackLayout Spacing="5">
                                <Stepper
                                    x:Name="MaximumLineStepper"
                                    Increment="1"
                                    Maximum="5"
                                    Minimum="1"
                                    VerticalOptions="Center" />
                                <Label Text="{x:Binding Source={x:Reference MaximumLineStepper}, Path=Value}" VerticalOptions="Center" />
                            </HorizontalStackLayout>
                        </VerticalStackLayout>
                    </HorizontalStackLayout>

                    <VerticalStackLayout MinimumWidthRequest="200" Spacing="8">
                        <Label Text="Line Height" />
                        <Slider
                            x:Name="LineHeightSlider"
                            Maximum="3"
                            Minimum="1" />
                    </VerticalStackLayout>

                    <Label
                        LineBreakMode="{x:Binding Source={x:Reference LineBreakModePicker},
                                                  Path=SelectedIndex,
                                                  Converter={x:StaticResource LineBreakModeEnumToStringConverter},
                                                  Mode=TwoWay}"
                        LineHeight="{x:Binding Source={x:Reference LineHeightSlider},
                                               Path=Value,
                                               Mode=TwoWay}"
                        MaxLines="{x:Binding Source={x:Reference MaximumLineStepper},
                                             Path=Value,
                                             Mode=TwoWay}"
                        Text="{x:StaticResource Lorem}" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>