<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.MenuBarPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    Title="MenuBar"
    Padding="10"
    x:DataType="app:MenuBarPageViewModel">
    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="github.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <app:BasePage.Resources>
        <FontImageSource
            x:Key="DownloadIcon"
            FontFamily="{x:Static app:FontNames.FluentSystemIconsRegular}"
            Glyph="{Static app:FluentUIIcon.Ic_fluent_arrow_download_48_regular}"
            Color="{AppThemeBinding Light='#15161e',
                                    Dark='#eaeaea'}" />

        <x:String x:Key="ControlInfo">
            A .NET Multi-platform App UI (.NET MAUI) menu bar is a container that presents a set of menus in a horizontal row, at the top of an app on Mac Catalyst and Windows.
        </x:String>

        <x:String x:Key="PropertiesListHeader">
            Each top-level menu in the menu bar, known as a menu bar item, is represented by a MenuBarItem object. MenuBarItem defines the following properties:
        </x:String>

        <x:String x:Key="PropertiesListFooter">
            These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
        </x:String>


        <x:String x:Key="ImageButtonControlInfo">
            The Button class defines an ImageSource property that allows you to display a small bitmap image on the Button, either alone or in combination with text. You can also specify how the text and image are arranged. The ImageSource property is of type ImageSource, which means that the bitmaps can be loaded from a file, embedded resource, URI, or stream.
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Text </strong>, of type <strong style="color:blue">string</strong>, defines the menu text.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">IsEnabled</strong>, of type <strong style="color:blue">boolean</strong>, specifies whether the menu is enabled. The default value of this property is true.
                            ]]>
            </x:String>
        </x:Array>

    </app:BasePage.Resources>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertiesItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="You can stick menu bar everywhere" />
                    <Label Text="Button:" />
                    <Button
                        HorizontalOptions="Start"
                        Text="&#x25B6;&#xFE0F; Play"
                        WidthRequest="80">
                        <FlyoutBase.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Pause">
                                    <MenuFlyoutItem.IconImageSource>
                                        <FontImageSource FontFamily="Arial" Glyph="&#x23F8;" />
                                    </MenuFlyoutItem.IconImageSource>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Stop">
                                    <MenuFlyoutItem.IconImageSource>
                                        <FontImageSource FontFamily="Arial" Glyph="&#x23F9;" />
                                    </MenuFlyoutItem.IconImageSource>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </FlyoutBase.ContextFlyout>
                    </Button>
                    <Label Text="Image:" />
                    <Image
                        HeightRequest="100"
                        HorizontalOptions="Start"
                        Source="dotnet_bot.png"
                        WidthRequest="100">
                        <FlyoutBase.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem IconImageSource="{x:StaticResource DownloadIcon}" Text="Save Image" />
                            </MenuFlyout>
                        </FlyoutBase.ContextFlyout>
                    </Image>
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>