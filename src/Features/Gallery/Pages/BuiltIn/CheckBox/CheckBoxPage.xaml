<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              xmlns:app="clr-namespace:MAUIsland"
             
              x:Class="MAUIsland.CheckBoxPage"
              x:DataType="app:CheckBoxPageViewModel"
             
             
              Title="Check Box">
    <app:BasePage.Resources>
        <ResourceDictionary>
            <app:StringTernaryOperatorConverter x:Key="StringTernaryOperatorConverter" />
            
            <x:String x:Key="ControlInfo">
                The .NET Multi-platform App UI (.NET MAUI) CheckBox is a type of button that can either be checked or empty. When a checkbox is checked, it's considered to be on. When a checkbox is empty, it's considered to be off.
            </x:String>

            <x:String x:Key="PropertiesListHeader">
                CheckBox defines the following properties:
            </x:String>

            <x:String x:Key="PropertiesListFooter">
                These properties are backed by BindableProperty objects, which means that they can be targets of data bindings, and styled.
            </x:String>
            
            <x:Array x:Key="CheckBoxStateMessages" Type="{x:Type x:String}" >
                <x:String> Checked </x:String>
                <x:String> Not Checked </x:String>
            </x:Array>

            <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
                <x:String>
                    <![CDATA[
                                <strong style="color:blue">IsChecked</strong>, of type <strong style="color:blue">bool</strong>, which indicates whether the CheckBox is checked. This property has a default binding mode of <strong style="color:blue">TwoWay</strong>
                            ]]>
                </x:String>
                <x:String>
                    <![CDATA[
                                <strong style="color:blue">Color</strong>, of type <strong style="color:blue">Color</strong>, which indicates the color of the CheckBox.
                            ]]>
                </x:String>
            </x:Array>

        </ResourceDictionary>
    </app:BasePage.Resources>
    
    
    <ScrollView>
        <VerticalStackLayout>
           <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:StaticResource ControlInfo}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Footer="{x:StaticResource PropertiesListFooter}"
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertyItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>
            <Label Text="A simple CheckBox"
                   FontAttributes="Bold"
                   FontSize="Title"/>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CheckBox />
            </Frame>
            <app:SourceCodeExpander XamlCode="{x:Binding StandardCheckBoxXamlCode}"/>

            <Label Text="A CheckBox has some properties to be defined"
                   FontAttributes="Bold"
                   FontSize="Title"/>

            <Label Text="1. Color, of type Color, which indicates the color of the CheckBox."
                   FontSize="Title"/>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CheckBox Color="{x:StaticResource Primary}"/>
            </Frame>
            <app:SourceCodeExpander XamlCode="{x:Binding CheckBoxWithColorXamlCode}"/>

            <Label Text="2. IsChecked, of type bool, which indicates whether the CheckBox is checked. How about a CheckBox being chekced as default?"
                   FontSize="Title"/>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CheckBox IsChecked="True"/>
            </Frame>
            <app:SourceCodeExpander XamlCode="{x:Binding CheckBoxTrueByDefaultXamlCode}"/>

            <Label Text="These properties are backed by BindableProperty objects, which means that they can be styled, and be the target of data bindings."
                   FontAttributes="Bold"
                   FontSize="Title"/>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Grid>
                    <CheckBox IsChecked="{x:Binding IsChecked, Mode=TwoWay}"
                              Color="{x:Binding CurrentColor, Mode=OneWay}"/>
                    <HorizontalStackLayout HorizontalOptions="CenterAndExpand">
                        <Label Text="{x:Binding IsChecked, Converter={x:StaticResource StringTernaryOperatorConverter}, 
                                                           ConverterParameter={x:StaticResource CheckBoxStateMessages}}"
                               VerticalOptions="Center"
                               TextColor="{x:Binding CurrentColor, Mode=OneWay}"/>
                    </HorizontalStackLayout>
                </Grid>
            </Frame>
            <app:SourceCodeExpander XamlCode="{x:Binding CheckBoxWithBindingXamlCode}"/>

            <Label Text="Those CheckBoxes above are dumb. We need some titles for them."
                   FontAttributes="Bold"
                   FontSize="Title"/>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Grid>
                    <VerticalStackLayout>
                        <HorizontalStackLayout HorizontalOptions="Start" VerticalOptions="Center">
                            <Label Text="CheckBox 1"
                               FontAttributes="Bold"
                               FontSize="Default"/>       
                            <CheckBox x:Name="checkBox1"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout HorizontalOptions="Start" VerticalOptions="Center">
                            <Label Text="CheckBox 2"
                               FontAttributes="Bold"
                               FontSize="Default"/>
                            <CheckBox x:Name="checkBox2"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout HorizontalOptions="Start" VerticalOptions="Center">
                            <Label Text="CheckBox 3"
                               FontAttributes="Bold"
                               FontSize="Default"/>
                            <CheckBox x:Name="checkBox3"/>
                        </HorizontalStackLayout>
                    </VerticalStackLayout>
                </Grid>
            </Frame>
            <app:SourceCodeExpander XamlCode="{x:Binding CheckBoxWithLabelXamlCode}"/>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>