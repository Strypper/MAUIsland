<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage 
    x:Class="MAUIsland.ColorConverterPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Title="Color Converter"
    Padding="10"
    x:DataType="app:ColorConverterPageViewModel">

    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <app:BasePage.Resources>
        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   <strong style="color:blue">DefaultConvertReturnValue</strong> is type of <strong style="color:blue">object?</strong> default value to return when <strong style="color:blue">IValueConverter.Convert(object?, Type, object?, CultureInfo?)</strong> throws an <strong style="color:blue">Exception</strong>. This value is used when <strong style="color:blue">CommunityToolkit.Maui.Options.ShouldSuppressExceptionsInConverters</strong> is set to true.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">DefaultConvertBackReturnValue</strong> is type of <strong style="color:blue">object?</strong> default value to return when <strong style="color:blue">IValueConverter.ConvertBack(object?, Type, object?, CultureInfo?)</strong> throws an <strong style="color:blue">Exception</strong>. This value is used when <strong style="color:blue">CommunityToolkit.Maui.Options.ShouldSuppressExceptionsInConverters</strong> is set to true.  ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToBlackOrWhiteConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToBlackOrWhiteConverter</strong> is a one way converter that allows users to convert an incoming Color to a monochrome value of either Colors.Black or Colors.White.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToByteAlphaConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToByteAlphaConverter</strong> is a one way converter that allows users to convert an incoming Color to the alpha component as a value between 0 and 255.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToByteBlueConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToByteBlueConverter</strong> is a one way converter that allows users to convert an incoming Color to the blue component as a value between 0 and 255.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToByteRedConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToByteRedConverter</strong> is a one way converter that allows users to convert an incoming Color to the red component as a value between 0 and 255.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToByteGreenConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToByteGreenConverter</strong> is a one way converter that allows users to convert an incoming Color to the green component as a value between 0 and 255.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToCmykaStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToCmykaStringConverter</strong> is a one way converter that allows users to convert a Color value binding to its <strong style="color:blue">CMYKA</strong> string equivalent in the format: CMYKA(cyan,magenta,yellow,key,alpha) where cyan, magenta, yellow and key will be a value between 0% and 100%, and alpha will be a value between o and 1 (e.g. CMYKA(0%,100%,100%,0%,1) for Colors.Red.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToCmykStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToCmykStringConverter</strong> is a one way converter that allows users to convert a Color value binding to its CMYK string equivalent in the format: <strong style="color:blue">CMYK(cyan,magenta,yellow,key)</strong> where cyan, magenta, yellow and key will be a value between 0% and 100% (e.g. CMYK(0%,100%,100%,0%) for Colors.Red   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToColorForTextConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToColorForTextConverter</strong> is a one way converter that allows users to convert an incoming Color to a monochrome value of either Colors.Black or Colors.White based on whether it is determined as being dark for the human eye.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToDegreeHueConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToDegreeHueConverter</strong> is a one way converter that allows users to convert an incoming Color to the hue component as a value between 0 and 360. Hue is a degree on the color wheel from 0 to 360. 0 is red, 120 is green, 240 is blue.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToGrayScaleColorConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToGrayScaleColorConverter</strong> is a one way converter that allows users to convert an incoming <strong style="color:blue">Color</strong> to a grayscale <strong style="color:blue">Color</strong>.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToHexRgbStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToHexRgbStringConverter</strong> is a that allows users to convert a <strong style="color:blue">Color</strong> value binding to its RGB hexadecimal <strong style="color:blue">string</strong> equivalent in the format: #redgreenblue where red, green and blue will be a value between 0 and FF.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToHexRgbaStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToHexRgbaStringConverter</strong> is a that allows users to convert a <strong style="color:blue">Color</strong> value binding to its RGB hexadecimal <strong style="color:blue">string</strong> equivalent in the format: #redgreenbluealpha where red, green, blue and alpha will be a value between 0 and FF.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToHslStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToHslStringConverter</strong> is a one way converter that allows users to convert a <strong style="color:blue">Color</strong> value binding to its HSL <strong style="color:blue">string</strong> equivalent in the format: HSL(hue,saturation,lightness) where hue will be a value between 0 and 360, and saturation and lightness will be a value between 0% and 100%.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToHslaStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToHslaStringConverter</strong> is a one way converter that allows users to convert a <strong style="color:blue">Color</strong> value binding to its HSLA <strong style="color:blue">string</strong> equivalent in the format: HSLA(hue,saturation,lightness,alpha) where hue will be a value between 0 and 360, saturation and lightness will be a value between 0% and 100%, and alpha will be a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToInverseColorConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToInverseColorConverter</strong> is a one way converter that allows users to convert an incoming <strong style="color:blue">Color</strong> to its inverse.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToPercentBlackKeyConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToPercentBlackKeyConverter</strong> is a one way converter that allows users to convert an incoming Color to the key component as a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToPercentCyanConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToPercentCyanConverter</strong> is a one way converter that allows users to convert an incoming Color to the cyan component as a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToPercentMagentaConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToPercentMagentaConverter</strong> is a one way converter that allows users to convert an incoming Color to the magenta component as a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToPercentYellowConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToPercentYellowConverter</strong> is a one way converter that allows users to convert an incoming Color to the yellow component as a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToRgbStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToRgbStringConverter</strong> is a one way converter that allows users to convert a <strong style="color:blue">Color</strong> value binding to its RGB <strong style="color:blue">string</strong> equivalent in the format: RGB(red,green,blue) where red, green and blue will be a value between 0 and 255.   ]]>
            </x:String>
        </x:Array>

        <x:Array x:Key="ColorToRgbaStringConverterControlInfo" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   The <strong style="color:blue">ColorToRgbaStringConverter</strong> is a one way converter that allows users to convert a <strong style="color:blue">Color</strong> value binding to its RGBA <strong style="color:blue">string</strong> equivalent in the format: RGB(red,green,blue,alpha) where red, green and blue will be a value between 0 and 255, and alpha is a value between 0 and 1.   ]]>
            </x:String>
        </x:Array>

        <toolkit:ColorToBlackOrWhiteConverter x:Key="ColorToBlackOrWhiteConverter" />

        <toolkit:ColorToByteAlphaConverter x:Key="ColorToByteAlphaConverter" />

        <toolkit:ColorToByteBlueConverter x:Key="ColorToByteBlueConverter" />

        <toolkit:ColorToByteGreenConverter x:Key="ColorToByteGreenConverter" />

        <toolkit:ColorToByteRedConverter x:Key="ColorToByteRedConverter" />

        <toolkit:ColorToCmykaStringConverter x:Key="ColorToCmykaStringConverter" />

        <toolkit:ColorToCmykStringConverter x:Key="ColorToCmykStringConverter" />

        <toolkit:ColorToColorForTextConverter x:Key="ColorToColorForTextConverter" />

        <toolkit:ColorToDegreeHueConverter x:Key="ColorToDegreeHueConverter" />

        <toolkit:ColorToGrayScaleColorConverter x:Key="ColorToGrayScaleColorConverter" />

        <toolkit:ColorToHexRgbStringConverter x:Key="ColorToHexRgbStringConverter" />

        <toolkit:ColorToHexRgbaStringConverter x:Key="ColorToHexRgbaStringConverter" />

        <toolkit:ColorToHslStringConverter x:Key="ColorToHslStringConverter" />
        
        <toolkit:ColorToHslaStringConverter x:Key="ColorToHslaStringConverter" />

        <toolkit:ColorToInverseColorConverter x:Key="ColorToInverseColorConverter" />

        <toolkit:ColorToPercentBlackKeyConverter x:Key="ColorToPercentBlackKeyConverter" />

        <toolkit:ColorToPercentCyanConverter x:Key="ColorToPercentCyanConverter" />
        
        <toolkit:ColorToPercentMagentaConverter x:Key="ColorToPercentMagentaConverter" />

        <toolkit:ColorToPercentYellowConverter x:Key="ColorToPercentYellowConverter" />

        <toolkit:ColorToRgbStringConverter x:Key="ColorToRgbStringConverter" />

        <toolkit:ColorToRgbaStringConverter x:Key="ColorToRgbaStringConverter" />
    </app:BasePage.Resources>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:Binding ControlInformation.ControlDetail}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Converter Properties" />
                    <CollectionView ItemsSource="{x:StaticResource PropertiesItemsSource}" 
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Setup Converter" />
                    <VerticalStackLayout>
                        <Label Text="{x:Binding SetupDescription}"/>
                        <Label Text="{x:Binding XamlNamespace}" TextColor="Blue"/>
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Text="Therefore the following:"/>
                    <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding FullNamepaceExampleBefore}" />
                    <Label Text="Would be modified to include the xmlns as follows:"/>
                    <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding FullNamepaceExampleAfter}" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Color Panel" />
                    <Label Text="Please design a Color"/>
                    <Grid ColumnDefinitions="0.1*, 0.9*" 
                          RowDefinitions="auto, auto, auto, auto"
                          Margin="5">
                        <Label Grid.Column="0" Grid.Row="0" 
                               Text="Red byte"/>
                        <Slider Grid.Column="1" Grid.Row="0" 
                                Minimum="0" Maximum="1" 
                                Value="{x:Binding RedByte}" />
                        <Label Grid.Column="0" Grid.Row="1" 
                               Text="Green byte"/>
                        <Slider Grid.Column="1" Grid.Row="1" 
                                Minimum="0" Maximum="1" 
                                Value="{x:Binding GreenByte}" />
                        <Label Grid.Column="0" Grid.Row="2" 
                               Text="Blue byte"/>
                        <Slider Grid.Column="1"  Grid.Row="2" 
                                Minimum="0" Maximum="1" 
                                Value="{x:Binding BlueByte}" />
                        <Label Grid.Column="0" Grid.Row="3" 
                               Text="Alpha byte"/>
                        <Slider Grid.Column="1" Grid.Row="3" 
                                Minimum="0" Maximum="1"
                                Value="{Binding AlphaByte}" />
                    </Grid>
                    <Label Text="Your chosen Color here"/>
                    <Border Padding="0">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="5" />
                        </Border.StrokeShape>
                        <BoxView Color="{x:Binding ExampleColor}" HeightRequest="100" />
                    </Border>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Black Or White Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToBlackOrWhiteConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToBlackOrWhiteConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into this text color "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor, Converter={x:StaticResource ColorToBlackOrWhiteConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToBlackOrWhiteConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToBlackOrWhiteConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Byte Alpha Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToByteAlphaConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToBlackOrWhiteConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into this Byte Alpha (Transparency) "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToByteAlphaConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteAlphaConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteAlphaConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Byte Blue Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToByteBlueConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToByteBlueConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into this Byte Blue "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToByteBlueConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteBlueConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteBlueConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Byte Red Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToByteRedConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToByteRedConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into this Byte Red "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToByteRedConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </VerticalStackLayout>
                    <Label Text="This is ViewModel code" />
                    <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                    <Label Text="Here what your converter look like" />
                    <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteRedConverterSetup}" />
                    <Label Text="This Xaml TextColor code" />
                    <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteRedConverterTextTesting}" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Byte Green Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToByteGreenConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToByteGreenConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into this Byte Green "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToByteGreenConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteGreenConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToByteGreenConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Cmyka String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToCmykaStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToCmykaStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Cmyka String "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToCmykaStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToCmykaStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToCmykaStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Cmyk String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToCmykStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToCmykStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Cmyk String "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToCmykStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToCmykStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToCmykStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                   Style="{x:StaticResource DocumentSectionTitleStyle}" 
                   Text="Color To Color For Text Converter" />
                        <ImageButton Grid.Column="1" 
                         HeightRequest="50" 
                         WidthRequest="50" 
                         HorizontalOptions="End" 
                         Source="microsoft.png" 
                         Command="{x:Binding OpenColorToColorForTextConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToColorForTextConverterControlInfo}"
                        Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                              TextColor="{x:Binding ExampleColor}"
                              FontAttributes="Bold"/>
                                    <Span Text=" into Color For Text "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToColorForTextConverter}}"
                              FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToColorForTextConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToColorForTextConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Degree Hue Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToDegreeHueConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToDegreeHueConverterControlInfo}"
                                   Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Degree Hue, and it look like this: "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToDegreeHueConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToDegreeHueConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToDegreeHueConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                   Style="{x:StaticResource DocumentSectionTitleStyle}" 
                   Text="Color To Gray Scale Color Converter" />
                        <ImageButton Grid.Column="1" 
                         HeightRequest="50" 
                         WidthRequest="50" 
                         HorizontalOptions="End" 
                         Source="microsoft.png" 
                         Command="{x:Binding OpenColorToGrayScaleColorConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToGrayScaleColorConverterControlInfo}"
                       Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                              TextColor="{x:Binding ExampleColor}"
                              FontAttributes="Bold"/>
                                    <Span Text=" into this string "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToGrayScaleColorConverter}}"
                              FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToGrayScaleColorConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToGrayScaleColorConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Hex Rgb String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToHexRgbStringConverterUrlCommand}"/>   
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToHexRgbStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColorNotIncludeAlpha}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hex Code "/>
                                    <Span Text="{x:Binding ExampleColorNotIncludeAlpha, Converter={x:StaticResource ColorToHexRgbStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This Converter can show the Alpha if the value it converts has Alpha" TextColor="OrangeRed"/>
                        <Label Text="This Example has the same setup but take a color source has Alpha"/>
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hex Code "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToHexRgbStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorNoAlphaConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHexRgbStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHexRgbStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Hex Rgba String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToHexRgbaStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToHexRgbaStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hex Code with Alpha "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToHexRgbaStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHexRgbaStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHexRgbaStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Hsl String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToHslStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToHslStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hsl "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToHslStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHslStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHslStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Hsla String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToHslaStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToHslaStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hsl with Alpha"/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToHslaStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHslaStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToHslaStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Inverse Color Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToInverseColorConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToInverseColorConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Hsl with Alpha "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToInverseColorConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToInverseColorConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToInverseColorConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Percent Black Key Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToPercentBlackKeyConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToPercentBlackKeyConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Percent Black Key "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToPercentBlackKeyConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentBlackKeyConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentBlackKeyConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Percent Cyan Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToPercentCyanConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToPercentCyanConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Percent Cyan "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToPercentCyanConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentCyanConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentCyanConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Percent Magenta Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToPercentMagentaConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToPercentMagentaConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Percent Magenta "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToPercentMagentaConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentMagentaConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentMagentaConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Percent Yellow Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToPercentYellowConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToPercentYellowConverterControlInfo}"
                        Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Percent Yellow "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToPercentYellowConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentYellowConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToPercentYellowConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                               Style="{x:StaticResource DocumentSectionTitleStyle}" 
                               Text="Color To Rgb String Converter" />
                        <ImageButton Grid.Column="1" 
                                     HeightRequest="50" 
                                     WidthRequest="50" 
                                     HorizontalOptions="End" 
                                     Source="microsoft.png" 
                                     Command="{x:Binding OpenColorToRgbStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToRgbStringConverterControlInfo}"
                                    Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                                          TextColor="{x:Binding ExampleColor}"
                                          FontAttributes="Bold"/>
                                    <Span Text=" into Rgb String "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToRgbStringConverter}}"
                                          FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToRgbStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToRgbStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Grid ColumnDefinitions="0.8*, 0.2*">
                        <Label Grid.Column="0" 
                   Style="{x:StaticResource DocumentSectionTitleStyle}" 
                   Text="Color To Rgba String Converter" />
                        <ImageButton Grid.Column="1" 
                         HeightRequest="50" 
                         WidthRequest="50" 
                         HorizontalOptions="End" 
                         Source="microsoft.png" 
                         Command="{x:Binding OpenColorToRgbaStringConverterUrlCommand}"/>
                    </Grid>
                    <CollectionView ItemsSource="{x:StaticResource ColorToRgbaStringConverterControlInfo}"
                        Style="{x:StaticResource PropertiesListStyle}"/>
                    <VerticalStackLayout Margin="10" Spacing="5">
                        <Label VerticalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="The converter will turn the color of this "/>
                                    <Span Text="Text Color"
                              TextColor="{x:Binding ExampleColor}"
                              FontAttributes="Bold"/>
                                    <Span Text=" into Rgba String "/>
                                    <Span Text="{x:Binding ExampleColor, Converter={x:StaticResource ColorToRgbaStringConverter}}"
                              FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="This is ViewModel code" />
                        <app:SourceCodeExpander CodeType="CSharp" Code="{x:Binding CSharpColorConverterTestingViewModel}" />
                        <Label Text="Here what your converter look like" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToRgbaStringConverterSetup}" />
                        <Label Text="This Xaml TextColor code" />
                        <app:SourceCodeExpander CodeType="Xaml" Code="{x:Binding XamlColorToRgbaStringConverterTextTesting}" />
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>

</app:BasePage>