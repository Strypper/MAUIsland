<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.DockLayoutPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Title="Dock Layout"
    Padding="10"
    x:DataType="app:DockLayoutPageViewModel"
    BackgroundColor="Transparent">

    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="microsoft.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <app:BasePage.Resources>

        <x:String x:Key="Important1">
            HorizontalSpacing and VerticalSpacing is applied between neighboring views in the DockLayout. For example, HorizontalSpacing is added between Left, None, and Right views, but also between neighboring views in the same DockPosition such as multiple views docked to the Left. VerticalSpacing is rendered between vertically stacked views in Top, None, and Bottom positions.
        </x:String>

        <x:String x:Key="UsingDockLayout">
            For Left / Right docking, a WidthRequest should be specified. For Top / Bottom docking, a HeightRequest defines the size of the child view along the docking direction. The orthogonal directions are always calculated implicitly by the DockLayout manager.
        </x:String>

        <x:String x:Key="UsingDockLayoutWithC#">
            A DockLayout can be constructed conveniently in C# as shown here:
        </x:String>

        <x:String x:Key="UsingDockLayoutWithC#1">
            Note: DockPosition.None is the default and can be omitted.
        </x:String>

        <x:String x:Key="SettingDockPosition">
            To set the docking position from C#, use DockLayout.SetDockPosition(IView, DockPosition) to apply the attached DockPosition property.
        </x:String>

        <x:String x:Key="Customizing">
            A DockLayout container supports arbitrary Padding as well as several DockLayout-specific properties for customization. An example in XAML with all available options is given here:
        </x:String>

        <x:Array x:Key="PropertyItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[   <strong style="color:blue">Padding</strong> property is a <strong style="color:blue">Thickness</strong>, gets or sets the padding around the layout container (inherited from Layout)..   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">HorizontalSpacing</strong> property is a <strong style="color:blue">double</strong>, gets or sets the horizontal spacing between docked views..   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">VerticalSpacing</strong> property is a <strong style="color:blue">double</strong>, gets or sets the vertical spacing between docked views.   ]]>
            </x:String>
            <x:String>
                <![CDATA[   <strong style="color:blue">ShouldExpandLastChild</strong> property is a <strong style="color:blue">Thickness</strong>, if true, the last child is expanded to fill the remaining space (default: true).  ]]>
            </x:String>
        </x:Array>
    </app:BasePage.Resources>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:Binding ControlInformation.ControlDetail}" />
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout>
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Properties" />
                    <CollectionView ItemsSource="{x:StaticResource PropertyItemsSource}" Style="{x:StaticResource PropertiesListStyle}" />
                </VerticalStackLayout>
            </Frame>

            <Border
                Padding="10"
                BackgroundColor="#004173"
                StrokeShape="RoundRectangle 4">
                <VerticalStackLayout>
                    <Label
                        Style="{x:StaticResource DocumentSectionTitleStyle}"
                        Text="Important"
                        TextColor="White" />
                    <Label Text="{x:StaticResource Important1}" TextColor="White" />
                </VerticalStackLayout>
            </Border>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Using the DockLayout" />
                    <toolkit:DockLayout>
                        <Button
                            toolkit:DockLayout.DockPosition="Top"
                            HeightRequest="50"
                            Text="Top" />
                        <Button
                            toolkit:DockLayout.DockPosition="Bottom"
                            HeightRequest="70"
                            Text="Bottom" />
                        <Button
                            toolkit:DockLayout.DockPosition="Left"
                            Text="Left"
                            WidthRequest="80" />
                        <Button
                            toolkit:DockLayout.DockPosition="Right"
                            Text="Right"
                            WidthRequest="90" />
                        <Button Text="Center" />
                    </toolkit:DockLayout>
                    <app:SourceCodeExpander Code="{x:Binding XamlDockLayout}" CodeType="Xaml" />
                    <Label Text="{x:StaticResource UsingDockLayout}" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="C#" />
                    <Label Text="{x:StaticResource UsingDockLayoutWithC#}" />
                    <app:SourceCodeExpander Code="{x:Binding CsharpDockLayout}" CodeType="CSharp" />
                    <Label Text="{x:StaticResource UsingDockLayoutWithC#1}" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Setting the dock position" />
                    <Label Text="{x:StaticResource SettingDockPosition}" />
                    <app:SourceCodeExpander Code="{x:Binding SettingDockLayoutPosition}" CodeType="CSharp" />
                </VerticalStackLayout>
            </Frame>

            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Customizing a DockLayout" />
                    <Label Text="{x:StaticResource Customizing}" />
                    <app:SourceCodeExpander Code="{x:Binding XamlCustomizeDockLayout}" CodeType="Xaml" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>