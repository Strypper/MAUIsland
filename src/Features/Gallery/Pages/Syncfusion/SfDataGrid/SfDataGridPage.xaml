<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    x:Class="MAUIsland.SfDataGridPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:MAUIsland"
    xmlns:syncfusion="clr-namespace:Syncfusion.Maui.DataGrid;assembly=Syncfusion.Maui.DataGrid"
    Title="SfDataGrid"
    Padding="10"
    x:DataType="app:SfDataGridPageViewModel">


    <app:BasePage.Resources>

        <x:String x:Key="PropertiesListHeader">
            Key Features:
        </x:String>

        <x:String x:Key="BindingDataToDataGrid">
            To bind the data source to the SfDataGrid, set the SfDataGrid.ItemsSource property as follows. You can bind the data source of the SfDataGrid either from XAML or in code. The following code example binds the collection created in the previous step to the SfDataGrid.ItemsSource property:
        </x:String>

        <x:String x:Key="DefiningColumnSection">
            By default, the SfDataGrid automatically creates columns for all the properties in the data source. The type of the column generated depends on the type of data in the column. When the columns are auto-generated, handle the SfDataGrid.AutoGeneratingColumnMode mode to customize or cancel the columns before they are added to the columns collection in the SfDataGrid.
        </x:String>

        <x:String x:Key="DefiningColumnSection1">
            The columns can be manually defined by setting the SfDataGrid.AutoGenerateColumnsMode property to ‘None’ and by adding the DataGridColumn objects to the SfDataGrid.Columns collection. This can be done from both XAML and code. The following code example illustrates this:
        </x:String>

        <x:Array x:Key="PropertiesItemsSource" Type="{x:Type x:String}">
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Data Binding</strong>, Bind different types of data sources, including DataTable.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Column Types</strong>, Show different data types in different types of columns. The following column types are supported: numeric, text, date, checkbox, image, and template. The template column is used to load any control in a column.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Sorting</strong>, Interactively sort one or more columns.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Filtering</strong>, Programmatically filter data based on the criteria.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Column Sizing</strong>, Set the width of columns with various sizing options. Columns can also be sized based on their content.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Auto row height</strong>, Set the height for rows based on the content of their cells.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Selection</strong>, Select one or more rows. Keyboard navigation is supported in Windows platform.
                            ]]>
            </x:String>
            <x:String>
                <![CDATA[
                                <strong style="color:blue">Styling</strong>, Customize the appearance of cells and headers. Conditional styling is supported.
                            ]]>
            </x:String>
        </x:Array>


    </app:BasePage.Resources>

    <app:BasePage.ToolbarItems>
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.GitHubUrl}"
            IconImageSource="githublogo.png"
            Text="Source code" />
        <ToolbarItem
            Command="{x:Binding OpenUrlCommand}"
            CommandParameter="{x:Binding ControlInformation.DocumentUrl}"
            IconImageSource="syncfusionlogo.png"
            Text="Original Document" />
    </app:BasePage.ToolbarItems>

    <ScrollView>
        <VerticalStackLayout Spacing="20">
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <Label Text="{x:Binding ControlInformation.ControlDetail}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <CollectionView
                    Header="{x:StaticResource PropertiesListHeader}"
                    ItemsSource="{x:StaticResource PropertiesItemsSource}"
                    Style="{x:StaticResource PropertiesListStyle}" />
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Simple datagrid" />
                    <Label Text="{x:StaticResource BindingDataToDataGrid}" />
                    <syncfusion:SfDataGrid
                        x:Name="dataGrid"
                        BackgroundColor="White"
                        ItemsSource="{x:Binding OrderInfo}" />
                    <app:SourceCodeExpander Code="{x:Binding SimpleDataGridXamlCode}" />
                </VerticalStackLayout>
            </Frame>
            <Frame Style="{x:StaticResource DocumentContentFrameStyle}">
                <VerticalStackLayout Spacing="10">
                    <Label Style="{x:StaticResource DocumentSectionTitleStyle}" Text="Defining columns" />
                    <Label Text="{x:StaticResource DefiningColumnSection}" />
                    <Label Text="{x:StaticResource DefiningColumnSection1}" />
                    <app:SourceCodeExpander Code="{x:Binding DefiningColumnsXamlCode}" />
                </VerticalStackLayout>
            </Frame>
        </VerticalStackLayout>
    </ScrollView>
</app:BasePage>